# coding=utf-8
import math
import random
import time
import urllib.parse
from loguru import logger


class RsVmp:
    def __init__(self):
        self.ar37 = None
        self.evstr = ''
        # 需要修改
        self.ident_arr = ['_$fd', '_$aH', '_$ih', '_$fJ', '_$$P', '_$_l', '_$fh', '_$kF', '_$$N', '_$k$', '_$iZ',
                          '_$_F', '_$gb', '_$gx', '_$fK', '_$_3', '_$fB', '_$$3', '_$bR', '_$_5', '_$iJ', '_$al',
                          '_$eR', '_$$Z', '_$dJ', '_$iP', '_$cC', '_$it', '_$br', '_$f5', '_$dt', '_$$d', '_$_U',
                          '_$_P', '_$ar', '_$d3', '_$cf', '_$f3', '_$$o', '_$dR', '_$_9', '_$dU', '_$jt', '_$hD',
                          '_$hT', '_$bU', '_$_c', '_$hb', '_$fb', '_$gB', '_$$1', '_$iX', '_$cW', '_$cd', '_$gr',
                          '_$$v', '_$d5', '_$cL', '_$an', '_$iy', '_$_W', '_$ao', '_$$k', '_$gh', '_$eT', '_$cZ',
                          '_$e4', '_$fR', '_$ab', '_$iL', '_$af', '_$b$', '_$gN', '_$$f', '_$i1', '_$_z', '_$kt',
                          '_$_Q', '_$cR', '_$gH', '_$iT', '_$eD', '_$d9', '_$cj', '_$gS', '_$$R', '_$bs', '_$_H',
                          '_$$V', '_$aP', '_$fT', '_$$O', '_$ig', '_$ij', '_$gj', '_$gJ', '_$ga', '_$a9', '_$hF',
                          '_$ev', '_$bx', '_$fp', '_$aR', '_$c5', '_$fZ', '_$kh', '_$dZ', '_$$7', '_$er', '_$_n',
                          '_$dp', '_$i8', '_$_C', '_$f6', '_$a5', '_$cY', '_$g$', '_$bX', '_$av', '_$dj', '_$aT',
                          '_$$b', '_$gf', '_$et', '_$cX', '_$kp', '_$iR', '_$g7', '_$kb', '_$_x', '_$hY', '_$eQ',
                          '_$fQ', '_$_T', '_$jj', '_$fU', '_$bB', '_$bv', '_$jB', '_$fn', '_$hr', '_$az', '_$aX',
                          '_$aj', '_$h$', '_$$n', '_$g2', '_$$$', '_$de', '_$$9', '_$bi', '_$jf', '_$b2', '_$aq',
                          '_$bf', '_$$s', '_$aF', '_$dN', '_$hp', '_$dG', '_$b_', '_$bJ', '_$da', '_$_h', '_$eN',
                          '_$$F', '_$bN', '_$a4', '_$j5', '_$dl', '_$bc', '_$b5', '_$hi', '_$a_', '_$jq', '_$fv',
                          '_$$C', '_$cQ', '_$bz', '_$f_', '_$ir', '_$bn', '_$en', '_$dn', '_$jL', '_$e2', '_$cT',
                          '_$_w', '_$dv', '_$aU', '_$bG', '_$e7', '_$bo', '_$gY', '_$$a', '_$h7', '_$cc', '_$$X',
                          '_$ef', '_$aN', '_$eo', '_$_7', '_$id', '_$_N', '_$eg', '_$db', '_$cJ', '_$gp', '_$eJ',
                          '_$$U', '_$ky', '_$c$', '_$kJ', '_$jg', '_$bZ', '_$fF', '_$io', '_$ip', '_$_k', '_$bq',
                          '_$dg', '_$aZ', '_$cB', '_$cb', '_$fx', '_$ak', '_$fj', '_$cl', '_$dF', '_$iN', '_$ku',
                          '_$bV', '_$j$', '_$fr', '_$dQ', '_$e8', '_$b7', '_$bD', '_$jl', '_$hW', '_$co', '_$iC',
                          '_$kk', '_$$J', '_$jC', '_$dH', '_$jP', '_$aQ', '_$$0', '_$a$', '_$f9', '_$iz', '_$$y',
                          '_$fX', '_$bO', '_$gD', '_$fN', '_$i6', '_$ck', '_$i9', '_$kg', '_$_g', '_$ai', '_$eh',
                          '_$eZ', '_$_V', '_$hJ', '_$jm', '_$ib', '_$$K', '_$gT', '_$eL', '_$dI', '_$fI', '_$cg',
                          '_$_X', '_$c1', '_$eX', '_$_o', '_$e1', '_$dY', '_$jJ', '_$jF', '_$cN', '_$kD', '_$jd',
                          '_$eV', '_$iV', '_$eW', '_$$2', '_$i3', '_$cV', '_$c9', '_$dO', '_$ie', '_$il', '_$hk',
                          '_$eG', '_$ej', '_$bP', '_$_O', '_$h0', '_$$A', '_$cU', '_$jM', '_$b1', '_$kc', '_$hU',
                          '_$f7', '_$fL', '_$iQ', '_$$G', '_$c7', '_$cz', '_$gc', '_$aB', '_$$W', '_$eM', '_$jh',
                          '_$kG', '_$jI', '_$bj', '_$fo', '_$bt', '_$e6', '_$dL', '_$cA', '_$dP', '_$gy', '_$ax',
                          '_$ji', '_$$r', '_$kx', '_$fD', '_$hH', '_$dx', '_$d1', '_$dh', '_$ag', '_$gu', '_$di',
                          '_$jT', '_$bQ', '_$cp', '_$dV', '_$fV', '_$hZ', '_$_v', '_$h4', '_$f4', '_$$M', '_$e$',
                          '_$jU', '_$cs', '_$iU', '_$eA', '_$kl', '_$eu', '_$hR', '_$h1', '_$gw', '_$i$', '_$g0',
                          '_$_R', '_$jk', '_$$B', '_$bK', '_$$H', '_$f2', '_$dW', '_$ho', '_$bh', '_$gL', '_$aV',
                          '_$ew', '_$e5', '_$hM', '_$g1', '_$hO', '_$c2', '_$gX', '_$fc', '_$eb', '_$bL', '_$iK',
                          '_$h5', '_$ix', '_$ea', '_$eP', '_$ez', '_$cw', '_$dd', '_$ja', '_$$D', '_$h3', '_$ke',
                          '_$gE', '_$$T', '_$g6', '_$aa', '_$hn', '_$jx', '_$gC', '_$bw', '_$hI', '_$gn', '_$ii',
                          '_$ff', '_$jG', '_$a6', '_$j6', '_$_2', '_$be', '_$kB', '_$eK', '_$$L', '_$fk', '_$cH',
                          '_$gk', '_$iD', '_$f8', '_$eC', '_$hl', '_$ch', '_$jr', '_$aL', '_$e9', '_$$u', '_$_G',
                          '_$$j', '_$_M', '_$$w', '_$im', '_$ht', '_$fz', '_$aE', '_$kf', '_$kq', '_$j9', '_$_f',
                          '_$fW', '_$c3', '_$ft', '_$jw', '_$fM', '_$ap', '_$fl', '_$bI', '_$hz', '_$cF', '_$jp',
                          '_$at', '_$hA', '_$_$', '_$hq', '_$bp', '_$jZ', '_$$I', '_$cG', '_$jb', '_$iI', '_$gW',
                          '_$$_', '_$j1', '_$fs', '_$f1', '_$g5', '_$dM', '_$ha', '_$h9', '_$i_', '_$$m', '_$kE',
                          '_$d2', '_$gz', '_$gv', '_$i5', '_$_p', '_$gV', '_$hs', '_$kz', '_$a7', '_$_y', '_$aJ',
                          '_$hy', '_$_L', '_$_6', '_$in', '_$j_', '_$fa', '_$fy', '_$$6', '_$fO', '_$d$', '_$$q',
                          '_$aO', '_$gs', '_$hV', '_$kA', '_$ep', '_$ki', '_$dA', '_$gG', '_$_j', '_$aC', '_$kd',
                          '_$bA', '_$b3', '_$dq', '_$hh', '_$jz', '_$hP', '_$gq', '_$dE', '_$$Q', '_$_t', '_$ba',
                          '_$hf', '_$i7', '_$j7', '_$iA', '_$cr', '_$kn', '_$bd', '_$ay', '_$g9', '_$dw', '_$$l',
                          '_$if', '_$bH', '_$gg', '_$iH', '_$hN', '_$kI', '_$$g', '_$fg', '_$a8', '_$eB', '_$eY',
                          '_$gd', '_$jN', '_$$5', '_$b4', '_$$t', '_$km', '_$bC', '_$hv', '_$ed', '_$ia', '_$dX',
                          '_$$Y', '_$j8', '_$fS', '_$a2', '_$aY', '_$hc', '_$ey', '_$c6', '_$ac', '_$aI', '_$kr',
                          '_$ek', '_$d0', '_$ic', '_$fG', '_$_1', '_$bg', '_$$h', '_$_8', '_$cx', '_$_s', '_$hL',
                          '_$iW', '_$$p', '_$gQ', '_$jy', '_$dS', '_$aM', '_$c8', '_$el', '_$a0', '_$jR', '_$e_',
                          '_$i0', '_$cu', '_$gm', '_$bk', '_$aA', '_$_0', '_$c_', '_$eE', '_$eU', '_$hw', '_$j4',
                          '_$jV', '_$a1', '_$hQ', '_$aK', '_$h2', '_$gP', '_$bS', '_$iv', '_$jK', '_$hx', '_$ee',
                          '_$bT', '_$dk', '_$_b', '_$is', '_$es', '_$$e', '_$ex', '_$iS', '_$gl', '_$_E', '_$cy',
                          '_$aS', '_$gM', '_$fA', '_$ik', '_$g4', '_$fP', '_$js', '_$$z', '_$hC', '_$iF', '_$_Y',
                          '_$bF', '_$ju', '_$d6', '_$aw', '_$kH', '_$iM', '_$do', '_$bW', '_$kj', '_$cK', '_$cn',
                          '_$iE', '_$$c', '_$iB', '_$ah', '_$iw', '_$ko', '_$iO', '_$eF', '_$jD', '_$d8', '_$iY',
                          '_$$x', '_$_I', '_$b9', '_$jY', '_$bb', '_$je', '_$ad', '_$jn', '_$ds', '_$i2', '_$bY',
                          '_$iq', '_$cP', '_$hg', '_$fu', '_$dm', '_$dK', '_$as', '_$kv', '_$jA', '_$eS', '_$$4',
                          '_$jX', '_$_m', '_$eH', '_$ei', '_$hB', '_$hu', '_$_D', '_$g_', '_$jH', '_$i4', '_$hd',
                          '_$jv', '_$_r', '_$dC', '_$fq', '_$f0', '_$dT', '_$jE', '_$_d', '_$dy', '_$fH', '_$bu',
                          '_$f$', '_$b6', '_$hK', '_$am', '_$gF', '_$h8', '_$jS', '_$ci', '_$fY', '_$ec', '_$_B',
                          '_$k_', '_$d7', '_$hE', '_$_A', '_$du', '_$dr', '_$em', '_$cE', '_$jO', '_$gi', '_$_4',
                          '_$dD', '_$cq', '_$eO', '_$bE', '_$jo', '_$bm', '_$dc', '_$__', '_$_u', '_$ka', '_$aD',
                          '_$gK', '_$ca', '_$he', '_$_i', '_$bM', '_$h_', '_$cS', '_$cM', '_$cO', '_$fE', '_$fm',
                          '_$fw', '_$jc', '_$_J', '_$iG', '_$bl', '_$d4', '_$dB', '_$$8', '_$j2', '_$au', '_$eq',
                          '_$ae', '_$ct', '_$aW', '_$gZ', '_$fC', '_$ks', '_$b8', '_$hj', '_$aG', '_$gt', '_$h6',
                          '_$a3', '_$fe', '_$_q', '_$gA', '_$g3', '_$c4', '_$_a', '_$hG', '_$cI', '_$_S', '_$cD',
                          '_$iu', '_$hX', '_$ge', '_$j0', '_$jQ', '_$_e', '_$kC', '_$df', '_$go', '_$jW', '_$ce',
                          '_$fi', '_$gU', '_$by', '_$hm', '_$_Z', '_$eI', '_$$S', '_$$i', '_$$E', '_$_K', '_$cv',
                          '_$cm', '_$j3', '_$d_', '_$gI', '_$b0', '_$dz', '_$g8', '_$gR', '_$hS', '_$c0', '_$kw',
                          '_$gO', '_$e0', '_$e3']
        self.func_dict = {
            55: ["readyState", "=", "match", "[", "push", "createElement", "XMLHttpRequest", "script", "test", "apply",
                 "?", "length", "g", "form", "+=", "string", "join", "submit", "charCodeAt", "(", "target", ";", "abs",
                 "{", "cookie", "onclick", "replace", ":", "round", "status", "nodeType", "tagName", "call",
                 "responseText", "type", "getAttribute", ",", "split", "a", "slice", "appendChild", "location",
                 "number", ")", "onload", "]", "href", "splice", "function", "name", "src", "toString", "&", "indexOf",
                 "body", "action", "style", "onsubmit", "open", "addEventListener", "setAttribute", "prototype",
                 "https:", "#", "async", "div", "removeEventListener", "get", "innerHTML", "pathname", "80",
                 "ontimeout", "getTime", "onerror", "ActiveXObject", "external", "substr", "timeStamp", "EventTarget",
                 "pop", "removeChild", "concat", "search", "localStorage", "keyCode", "iframe", "HTMLFormElement",
                 "getElementsByTagName", "event", ".", "response", "onprogress", "getElementById", "}", "javascript:",
                 "headers"],
            # 数字集
            59: [10, 31, 16, 47, 24, 36, 9, 240, 268435456, 18, 86, 90, 134217727, 63, 12, 19, 4294967296, 4294967295,
                 8192, 4, 58, 1000, 200, 7, 17, 65535, 65536, 42, 100, 5, 256, 15, 64, 40, 255, 33, 224, 128, 48, 13,
                 131072, -1, 44, 37, 52, 43, 192, 604800, 32, 45, 46, 92, 8, 20, 51, 6, 2, 11, 3, 27, 134217728, 127,
                 57, 1024, 16843008, 8200, 2654435769, 67108864, 28, 79, 30, 8202, 4194304, 14, 65, 39, 60, 123, 100000,
                 55, 97, 34, 512, 1048576, 180, 0.01, -100, -0.01, 203, 8194, 4096, 126, 201, 283, 56, 93, 122, 120,
                 32768, 248, 26, 21, 300, 35, 86400000, 2097151, 170, 80, 98, 96, 5000, 257, 102, 59, 0.5, 268435455,
                 23, 2000, 82, 2048, 40960, 16383, 89, 0, 8203, 68, 33554432, 262144, 50000, 69, 2047, 8239, 3337565984,
                 164, 81, 2531011, 0.26, 1800, 8196, 0.35, 83, 8287, 110, 99, 1732584193, 72, 29, 360, 252, 12288,
                 271733878, 101, 2097152, -0.26, 16777215, 2400959708, 84, 0.9, 16843009, 6158, 56320, 75, 0.4,
                 0.813264543, 30000, 111, 112, 3988292384, 8193, 7560, 8201, 254, 88, 20000, 15679, 1518500249, 0.1,
                 65537, 91, 165, 4023233417, 0.6, 54, 8197, 0.8, 8195, 160, 55296, 643615, -180, -0.2, -0.9, 8199, 1001,
                 2562383102, -4, -90, -7, 8198, -2, 3000, 1500, 1859775393, 3395469782, 5089, 3285377520, 0.2, 1048575,
                 133, 173, 137, 153, 130, 197, 199, 162, 163, 191, 207, 146, 154, 145, 152, 190],
            82: math,
        }
        self.cd = ''
        self.localStorage = {
            '$_YVTX': "Wu9C",
            '$_YWTU': "WdfoeGszN3PzN5X3qO4gd3uBbm4emzLNrUjRnA8S6z3",
        }
        # 一开始要初始化好
        self.vmp_dict = {
            21: self.vmp({"_$_6": [45, 82, 45, 55, 26, 22, 42, 2, 0, 17, 24, 45, 59, 26, 52, 42, 72, 12]},
                         [None, [], None, []]),
            22: self.vmp(
                {"_$_6": [20, 25, 63, 2, 26, 0, 25, 63, 3, 6, 3, 45, 59, 26, 52, 42, 43, 38, 13, 6, 2, 6, 3, 6, 3, 25,
                          24, 63, 3, 55, 14, 23, 6, 2, 36, 54, 20, 6, 2, 26, 0, 23, 81, 6, 2, 9, 54, 8, 60, 25, 24, 6,
                          2, 26, 0, 42, 45, 59, 26, 0, 42, 30, 38, 33, 6, 2, 26, 1, 23, 82, 6, 2, 9, 54, 9, 60, 25, 24,
                          6, 2, 26, 0, 6, 2, 26, 1, 42, 6, 2, 9, 54, 10, 0, 25, 24, 10, 14, 6, 2, 26, 1, 23, 83, 6, 2,
                          9, 54, 10, 60, 25, 24, 26, 0, 25, 63, 3, 6, 3, 45, 59, 26, 52, 42, 43, 38, 51, 6, 2, 6, 3, 42,
                          26, 0, 43, 38, 12, 6, 2, 6, 3, 6, 2, 6, 3, 42, 89, 25, 24, 6, 2, 6, 3, 42, 45, 59, 26, 34, 42,
                          30, 38, 11, 6, 2, 6, 3, 45, 59, 26, 34, 42, 25, 24, 63, 3, 55, 14, 61, 6, 2, 12]},
                [None, [], None, []]),
            54: self.vmp(
                {"_$_6": [2, 0, 48, 0, 25, 37, 16, 2, 0, 48, 1, 25, 37, 11, 2, 0, 48, 2, 25, 37, 6, 2, 0, 48, 3, 25, 37,
                          10, 2, 0, 48, 4, 25, 37, 19, 2, 0, 48, 5, 25, 37, 29, 2, 0, 48, 6, 25, 37, 14, 2, 0, 48, 7,
                          25, 37, 26, 2, 0, 48, 8, 25, 37, 30, 2, 0, 48, 9, 25, 37, 8, 2, 0, 48, 10, 25, 37, 15, 2, 0,
                          48, 11, 25, 37, 24, 2, 0, 48, 12, 25, 37, 23, 2, 0, 48, 13, 25, 37, 1, 2, 0, 48, 14, 25, 37,
                          22, 2, 0, 48, 15, 25, 37, 28, 2, 0, 48, 16, 25, 37, 0, 2, 0, 48, 17, 25, 37, 3, 2, 0, 48, 18,
                          25, 37, 13, 2, 0, 48, 19, 25, 37, 27],
                 '_$du': {0: 103, 1: 0, 2: 102, 3: 203, 4: 224, 5: 181, 6: 108, 7: 240, 8: 101, 9: 126, 10: 103, 11: 11,
                          12: 102, 13: 203, 14: 225, 15: 181, 16: 208, 17: 180, 18: 100, 19: 127, }},
                [None, [], None, []]),
            81: 3,  # 固定
            82: 51,
            83: 153,  # 长数组第二位
            97: [-1] * 370,
        }
        self.encry_letter = ["q", "r", "c", "k", "l", "m", "D", "o", "E", "x", "t", "h", "W", "J", "i", "H", "A", "p",
                             "1", "s", "V", "Y", "K", "U", "3", "R", "F", "M", "Q", "w", "8", "I", "G", "f", "P", "O",
                             "9", "2", "b", "v", "L", "N", "j", ".", "7", "z", "X", "B", "a", "S", "n", "u", "0", "T",
                             "C", "6", "g", "y", "_", "4", "Z", "e", "5", "d", "{", "}", "|", "~", " ", "!", "#", "$",
                             "%", "(", ")", "*", "+", ",", "-", ";", "=", "?", "@", "[", "]", "^"]
        self.five_arr = None
        self.jz = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274,
                   2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548,
                   1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990,
                   1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096,
                   1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722,
                   1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980,
                   1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974,
                   1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192,
                   31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290,
                   251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444,
                   476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902,
                   314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960,
                   984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506,
                   879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948,
                   654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054,
                   702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384,
                   2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930,
                   2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580,
                   2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526,
                   2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888,
                   2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850,
                   2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804,
                   3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542,
                   2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920,
                   3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634,
                   3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012,
                   4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934,
                   4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896,
                   3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818,
                   3654703836, 1088359270, 936918000, 2847714899, 3736837829, 1202900863, 817233897, 3183342108,
                   3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614,
                   3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117]
        # 固定的
        self.six_arr = [
            [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
             None, None, None, None, None, None, None, None, None, None, None, None, None, None, 272, 276, None, 280,
             284, 288, None, None, 292, 296, 300, 304, 308, 312, 172, None, 208, 72, 148, 96, 236, 248, 220, 176, 120,
             144, None, 316, None, 320, None, 324, 328, 64, 188, 216, 24, 32, 104, 128, 60, 124, 52, 88, 160, 108, 164,
             140, 136, 112, 100, 196, 212, 92, 80, 48, 184, 84, 240, 332, None, 336, 340, 232, None, 192, 152, 8, 252,
             244, 132, 224, 44, 56, 168, 12, 16, 20, 200, 28, 68, 0, 4, 76, 40, 204, 156, 116, 36, 228, 180, 256, 264,
             260, 268],
            [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
             None, None, None, None, None, None, None, None, None, None, None, None, None, None, 4, 4, None, 4, 4, 4,
             None, None, 4, 4, 4, 4, 4, 4, 2, None, 3, 1, 2, 1, 3, 3, 3, 2, 1, 2, None, 4, None, 5, None, 5, 5, 1, 2, 3,
             0, 0, 1, 2, 0, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 3, 3, 1, 1, 0, 2, 1, 3, 5, None, 5, 5, 3, None, 3, 2, 0, 3, 3,
             2, 3, 0, 0, 2, 0, 0, 0, 3, 0, 1, 0, 0, 1, 0, 3, 2, 1, 0, 3, 2, 4, 4, 4, 4],
            [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
             None, None, None, None, None, None, None, None, None, None, None, None, None, None, 64, 80, None, 96, 112,
             128, None, None, 144, 160, 176, 192, 208, 224, 176, None, 64, 32, 80, 128, 176, 224, 112, 192, 224, 64,
             None, 240, None, 0, None, 16, 32, 0, 240, 96, 96, 128, 160, 0, 240, 240, 208, 96, 128, 176, 144, 48, 32,
             192, 144, 16, 80, 112, 64, 192, 224, 80, 192, 48, None, 64, 80, 160, None, 0, 96, 32, 240, 208, 16, 128,
             176, 224, 160, 48, 64, 80, 32, 112, 16, 0, 16, 48, 160, 48, 112, 208, 144, 144, 208, 0, 32, 16, 48],
            [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
             None, None, None, None, None, None, None, None, None, None, None, None, None, None, 17, 17, None, 17, 17,
             18, None, None, 18, 18, 18, 19, 19, 19, 10, None, 13, 4, 9, 6, 14, 15, 13, 11, 7, 9, None, 19, None, 20,
             None, 20, 20, 4, 11, 13, 1, 2, 6, 8, 3, 7, 3, 5, 10, 6, 10, 8, 8, 7, 6, 12, 13, 5, 5, 3, 11, 5, 15, 20,
             None, 21, 21, 14, None, 12, 9, 0, 15, 15, 8, 14, 2, 3, 10, 0, 1, 1, 12, 1, 4, 0, 0, 4, 2, 12, 9, 7, 2, 14,
             11, 16, 16, 16, 16],
            [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
             None, None, None, None, None, None, None, None, None, None, None, None, None, None, 0, 64, None, 128, 192,
             0, None, None, 64, 128, 192, 0, 64, 128, 192, None, 0, 128, 64, 0, 192, 128, 192, 0, 128, 0, None, 192,
             None, 0, None, 64, 128, 0, 192, 128, 128, 0, 128, 0, 192, 192, 64, 128, 0, 192, 64, 192, 128, 0, 64, 64,
             64, 192, 0, 0, 128, 64, 0, 192, None, 0, 64, 128, None, 0, 128, 128, 192, 64, 64, 0, 192, 128, 128, 192, 0,
             64, 128, 192, 64, 0, 64, 192, 128, 192, 192, 64, 64, 64, 64, 0, 128, 64, 192],
            [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, 68, 69, -1, 70, 71, 72, -1, -1, 73, 74, 75, 76, 77, 78, 43, -1, 52, 18, 37, 24, 59, 62,
             55, 44, 30, 36, -1, 79, -1, 80, -1, 81, 82, 16, 47, 54, 6, 8, 26, 32, 15, 31, 13, 22, 40, 27, 41, 35, 34,
             28, 25, 49, 53, 23, 20, 12, 46, 21, 60, 83, -1, 84, 85, 58, -1, 48, 38, 2, 63, 61, 33, 56, 11, 14, 42, 3,
             4, 5, 50, 7, 17, 0, 1, 19, 10, 51, 39, 29, 9, 57, 45, 64, 66, 65, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
             -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]]
        self.headers = {
            'User-Agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.76"
        }
        # 固定
        self.ax = {"0": {"_$cW": 6, "_$ku": 3}, "1": {"_$cW": 184, "_$ku": 8}, "2": {"_$cW": 185, "_$ku": 8},
                   "3": {"_$cW": 374, "_$ku": 9}, "4": {"_$cW": 375, "_$ku": 9}, "5": {"_$cW": 372, "_$ku": 9},
                   "6": {"_$cW": 373, "_$ku": 9}, "7": {"_$cW": 178, "_$ku": 8}, "8": {"_$cW": 179, "_$ku": 8},
                   "9": {"_$cW": 176, "_$ku": 8}, "10": {"_$cW": 177, "_$ku": 8}, "11": {"_$cW": 182, "_$ku": 8},
                   "12": {"_$cW": 183, "_$ku": 8}, "13": {"_$cW": 180, "_$ku": 8}, "14": {"_$cW": 181, "_$ku": 8},
                   "15": {"_$cW": 138, "_$ku": 8}, "16": {"_$cW": 139, "_$ku": 8}, "17": {"_$cW": 136, "_$ku": 8},
                   "18": {"_$cW": 137, "_$ku": 8}, "19": {"_$cW": 142, "_$ku": 8}, "20": {"_$cW": 143, "_$ku": 8},
                   "21": {"_$cW": 140, "_$ku": 8}, "22": {"_$cW": 141, "_$ku": 8}, "23": {"_$cW": 130, "_$ku": 8},
                   "24": {"_$cW": 131, "_$ku": 8}, "25": {"_$cW": 128, "_$ku": 8}, "26": {"_$cW": 129, "_$ku": 8},
                   "27": {"_$cW": 134, "_$ku": 8}, "28": {"_$cW": 135, "_$ku": 8}, "29": {"_$cW": 132, "_$ku": 8},
                   "30": {"_$cW": 133, "_$ku": 8}, "31": {"_$cW": 154, "_$ku": 8}, "32": {"_$cW": 155, "_$ku": 8},
                   "33": {"_$cW": 152, "_$ku": 8}, "34": {"_$cW": 153, "_$ku": 8}, "35": {"_$cW": 158, "_$ku": 8},
                   "36": {"_$cW": 159, "_$ku": 8}, "37": {"_$cW": 156, "_$ku": 8}, "38": {"_$cW": 157, "_$ku": 8},
                   "39": {"_$cW": 146, "_$ku": 8}, "40": {"_$cW": 147, "_$ku": 8}, "41": {"_$cW": 144, "_$ku": 8},
                   "42": {"_$cW": 145, "_$ku": 8}, "43": {"_$cW": 150, "_$ku": 8}, "44": {"_$cW": 151, "_$ku": 8},
                   "45": {"_$cW": 148, "_$ku": 8}, "46": {"_$cW": 149, "_$ku": 8}, "47": {"_$cW": 490, "_$ku": 9},
                   "48": {"_$cW": 491, "_$ku": 9}, "49": {"_$cW": 488, "_$ku": 9}, "50": {"_$cW": 489, "_$ku": 9},
                   "51": {"_$cW": 494, "_$ku": 9}, "52": {"_$cW": 495, "_$ku": 9}, "53": {"_$cW": 492, "_$ku": 9},
                   "54": {"_$cW": 493, "_$ku": 9}, "55": {"_$cW": 482, "_$ku": 9}, "56": {"_$cW": 483, "_$ku": 9},
                   "57": {"_$cW": 480, "_$ku": 9}, "58": {"_$cW": 481, "_$ku": 9}, "59": {"_$cW": 486, "_$ku": 9},
                   "60": {"_$cW": 487, "_$ku": 9}, "61": {"_$cW": 484, "_$ku": 9}, "62": {"_$cW": 485, "_$ku": 9},
                   "63": {"_$cW": 506, "_$ku": 9}, "64": {"_$cW": 507, "_$ku": 9}, "65": {"_$cW": 504, "_$ku": 9},
                   "66": {"_$cW": 505, "_$ku": 9}, "67": {"_$cW": 510, "_$ku": 9}, "68": {"_$cW": 511, "_$ku": 9},
                   "69": {"_$cW": 508, "_$ku": 9}, "70": {"_$cW": 509, "_$ku": 9}, "71": {"_$cW": 498, "_$ku": 9},
                   "72": {"_$cW": 499, "_$ku": 9}, "73": {"_$cW": 496, "_$ku": 9}, "74": {"_$cW": 497, "_$ku": 9},
                   "75": {"_$cW": 502, "_$ku": 9}, "76": {"_$cW": 503, "_$ku": 9}, "77": {"_$cW": 500, "_$ku": 9},
                   "78": {"_$cW": 501, "_$ku": 9}, "79": {"_$cW": 458, "_$ku": 9}, "80": {"_$cW": 459, "_$ku": 9},
                   "81": {"_$cW": 456, "_$ku": 9}, "82": {"_$cW": 457, "_$ku": 9}, "83": {"_$cW": 462, "_$ku": 9},
                   "84": {"_$cW": 463, "_$ku": 9}, "85": {"_$cW": 460, "_$ku": 9}, "86": {"_$cW": 461, "_$ku": 9},
                   "87": {"_$cW": 450, "_$ku": 9}, "88": {"_$cW": 451, "_$ku": 9}, "89": {"_$cW": 448, "_$ku": 9},
                   "90": {"_$cW": 449, "_$ku": 9}, "91": {"_$cW": 454, "_$ku": 9}, "92": {"_$cW": 455, "_$ku": 9},
                   "93": {"_$cW": 452, "_$ku": 9}, "94": {"_$cW": 453, "_$ku": 9}, "95": {"_$cW": 474, "_$ku": 9},
                   "96": {"_$cW": 475, "_$ku": 9}, "97": {"_$cW": 472, "_$ku": 9}, "98": {"_$cW": 473, "_$ku": 9},
                   "99": {"_$cW": 478, "_$ku": 9}, "100": {"_$cW": 479, "_$ku": 9}, "101": {"_$cW": 476, "_$ku": 9},
                   "102": {"_$cW": 477, "_$ku": 9}, "103": {"_$cW": 466, "_$ku": 9}, "104": {"_$cW": 467, "_$ku": 9},
                   "105": {"_$cW": 464, "_$ku": 9}, "106": {"_$cW": 465, "_$ku": 9}, "107": {"_$cW": 470, "_$ku": 9},
                   "108": {"_$cW": 471, "_$ku": 9}, "109": {"_$cW": 468, "_$ku": 9}, "110": {"_$cW": 469, "_$ku": 9},
                   "111": {"_$cW": 42, "_$ku": 8}, "112": {"_$cW": 43, "_$ku": 8}, "113": {"_$cW": 40, "_$ku": 8},
                   "114": {"_$cW": 41, "_$ku": 8}, "115": {"_$cW": 46, "_$ku": 8}, "116": {"_$cW": 47, "_$ku": 8},
                   "117": {"_$cW": 44, "_$ku": 8}, "118": {"_$cW": 45, "_$ku": 8}, "119": {"_$cW": 34, "_$ku": 8},
                   "120": {"_$cW": 35, "_$ku": 8}, "121": {"_$cW": 32, "_$ku": 8}, "122": {"_$cW": 33, "_$ku": 8},
                   "123": {"_$cW": 38, "_$ku": 8}, "124": {"_$cW": 39, "_$ku": 8}, "125": {"_$cW": 36, "_$ku": 8},
                   "126": {"_$cW": 37, "_$ku": 8}, "127": {"_$cW": 58, "_$ku": 8}, "128": {"_$cW": 59, "_$ku": 8},
                   "129": {"_$cW": 56, "_$ku": 8}, "130": {"_$cW": 57, "_$ku": 8}, "131": {"_$cW": 62, "_$ku": 8},
                   "132": {"_$cW": 63, "_$ku": 8}, "133": {"_$cW": 60, "_$ku": 8}, "134": {"_$cW": 61, "_$ku": 8},
                   "135": {"_$cW": 50, "_$ku": 8}, "136": {"_$cW": 51, "_$ku": 8}, "137": {"_$cW": 48, "_$ku": 8},
                   "138": {"_$cW": 49, "_$ku": 8}, "139": {"_$cW": 54, "_$ku": 8}, "140": {"_$cW": 55, "_$ku": 8},
                   "141": {"_$cW": 52, "_$ku": 8}, "142": {"_$cW": 53, "_$ku": 8}, "143": {"_$cW": 10, "_$ku": 8},
                   "144": {"_$cW": 11, "_$ku": 8}, "145": {"_$cW": 8, "_$ku": 8}, "146": {"_$cW": 9, "_$ku": 8},
                   "147": {"_$cW": 14, "_$ku": 8}, "148": {"_$cW": 15, "_$ku": 8}, "149": {"_$cW": 12, "_$ku": 8},
                   "150": {"_$cW": 13, "_$ku": 8}, "151": {"_$cW": 2, "_$ku": 8}, "152": {"_$cW": 3, "_$ku": 8},
                   "153": {"_$cW": 0, "_$ku": 8}, "154": {"_$cW": 1, "_$ku": 8}, "155": {"_$cW": 6, "_$ku": 8},
                   "156": {"_$cW": 7, "_$ku": 8}, "157": {"_$cW": 4, "_$ku": 8}, "158": {"_$cW": 5, "_$ku": 8},
                   "159": {"_$cW": 26, "_$ku": 8}, "160": {"_$cW": 27, "_$ku": 8}, "161": {"_$cW": 24, "_$ku": 8},
                   "162": {"_$cW": 25, "_$ku": 8}, "163": {"_$cW": 30, "_$ku": 8}, "164": {"_$cW": 31, "_$ku": 8},
                   "165": {"_$cW": 28, "_$ku": 8}, "166": {"_$cW": 29, "_$ku": 8}, "167": {"_$cW": 18, "_$ku": 8},
                   "168": {"_$cW": 19, "_$ku": 8}, "169": {"_$cW": 16, "_$ku": 8}, "170": {"_$cW": 17, "_$ku": 8},
                   "171": {"_$cW": 22, "_$ku": 8}, "172": {"_$cW": 23, "_$ku": 8}, "173": {"_$cW": 20, "_$ku": 8},
                   "174": {"_$cW": 21, "_$ku": 8}, "175": {"_$cW": 106, "_$ku": 8}, "176": {"_$cW": 107, "_$ku": 8},
                   "177": {"_$cW": 104, "_$ku": 8}, "178": {"_$cW": 105, "_$ku": 8}, "179": {"_$cW": 110, "_$ku": 8},
                   "180": {"_$cW": 111, "_$ku": 8}, "181": {"_$cW": 108, "_$ku": 8}, "182": {"_$cW": 109, "_$ku": 8},
                   "183": {"_$cW": 98, "_$ku": 8}, "184": {"_$cW": 99, "_$ku": 8}, "185": {"_$cW": 96, "_$ku": 8},
                   "186": {"_$cW": 97, "_$ku": 8}, "187": {"_$cW": 102, "_$ku": 8}, "188": {"_$cW": 103, "_$ku": 8},
                   "189": {"_$cW": 100, "_$ku": 8}, "190": {"_$cW": 101, "_$ku": 8}, "191": {"_$cW": 122, "_$ku": 8},
                   "192": {"_$cW": 123, "_$ku": 8}, "193": {"_$cW": 120, "_$ku": 8}, "194": {"_$cW": 121, "_$ku": 8},
                   "195": {"_$cW": 126, "_$ku": 8}, "196": {"_$cW": 127, "_$ku": 8}, "197": {"_$cW": 124, "_$ku": 8},
                   "198": {"_$cW": 125, "_$ku": 8}, "199": {"_$cW": 114, "_$ku": 8}, "200": {"_$cW": 115, "_$ku": 8},
                   "201": {"_$cW": 112, "_$ku": 8}, "202": {"_$cW": 113, "_$ku": 8}, "203": {"_$cW": 118, "_$ku": 8},
                   "204": {"_$cW": 119, "_$ku": 8}, "205": {"_$cW": 116, "_$ku": 8}, "206": {"_$cW": 117, "_$ku": 8},
                   "207": {"_$cW": 74, "_$ku": 8}, "208": {"_$cW": 75, "_$ku": 8}, "209": {"_$cW": 72, "_$ku": 8},
                   "210": {"_$cW": 73, "_$ku": 8}, "211": {"_$cW": 78, "_$ku": 8}, "212": {"_$cW": 79, "_$ku": 8},
                   "213": {"_$cW": 76, "_$ku": 8}, "214": {"_$cW": 77, "_$ku": 8}, "215": {"_$cW": 66, "_$ku": 8},
                   "216": {"_$cW": 67, "_$ku": 8}, "217": {"_$cW": 64, "_$ku": 8}, "218": {"_$cW": 65, "_$ku": 8},
                   "219": {"_$cW": 70, "_$ku": 8}, "220": {"_$cW": 71, "_$ku": 8}, "221": {"_$cW": 68, "_$ku": 8},
                   "222": {"_$cW": 69, "_$ku": 8}, "223": {"_$cW": 90, "_$ku": 8}, "224": {"_$cW": 91, "_$ku": 8},
                   "225": {"_$cW": 88, "_$ku": 8}, "226": {"_$cW": 89, "_$ku": 8}, "227": {"_$cW": 94, "_$ku": 8},
                   "228": {"_$cW": 95, "_$ku": 8}, "229": {"_$cW": 92, "_$ku": 8}, "230": {"_$cW": 93, "_$ku": 8},
                   "231": {"_$cW": 82, "_$ku": 8}, "232": {"_$cW": 83, "_$ku": 8}, "233": {"_$cW": 80, "_$ku": 8},
                   "234": {"_$cW": 81, "_$ku": 8}, "235": {"_$cW": 86, "_$ku": 8}, "236": {"_$cW": 87, "_$ku": 8},
                   "237": {"_$cW": 84, "_$ku": 8}, "238": {"_$cW": 85, "_$ku": 8}, "239": {"_$cW": 170, "_$ku": 8},
                   "240": {"_$cW": 171, "_$ku": 8}, "241": {"_$cW": 168, "_$ku": 8}, "242": {"_$cW": 169, "_$ku": 8},
                   "243": {"_$cW": 174, "_$ku": 8}, "244": {"_$cW": 175, "_$ku": 8}, "245": {"_$cW": 172, "_$ku": 8},
                   "246": {"_$cW": 173, "_$ku": 8}, "247": {"_$cW": 162, "_$ku": 8}, "248": {"_$cW": 163, "_$ku": 8},
                   "249": {"_$cW": 160, "_$ku": 8}, "250": {"_$cW": 161, "_$ku": 8}, "251": {"_$cW": 166, "_$ku": 8},
                   "252": {"_$cW": 167, "_$ku": 8}, "253": {"_$cW": 164, "_$ku": 8}, "254": {"_$cW": 165, "_$ku": 8},
                   "255": {"_$cW": 47, "_$ku": 6}}
        self.func_list = [
            'function _$kF(){var _$$1=[10];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$$N(){var _$$1=[12];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$k$(){var _$$1=[162];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$iZ(){var _$$1=[166];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_F(){var _$$1=[420];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$gb(){var _$$1=[518];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$gx(){var _$$1=[519];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$fK(){var _$$1=[46];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_3(){var _$$1=[47];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$fB(){var _$$1=[249];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$hj(){var _$$1=[325];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$aG(){var _$$1=[329];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$gt(){var _$$1=[332];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$h6(){var _$$1=[609];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$a3(){var _$$1=[616];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$fe(){var _$$1=[620];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_q(){var _$$1=[453];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$gA(){var _$$1=[456];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$g3(){var _$$1=[632];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$c4(){var _$$1=[635];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_a(){var _$$1=[637];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$$3(){var _$$1=[639];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$bR(){var _$$1=[644];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$hG(){var _$$1=[588];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$cI(){var _$$1=[596];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_5(){var _$$1=[678];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$iJ(){var _$$1=[365];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$al(){var _$$1=[366];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$eR(){var _$$1=[373];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$$Z(){var _$$1=[381];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$dJ(){var _$$1=[383];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$iP(){var _$$1=[385];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$cC(){var _$$1=[500];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$it(){var _$$1=[229];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$br(){var _$$1=[235];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$f5(){var _$$1=[73];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$$d(){var _$$1=[75];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$_U(){var _$$1=[704];Array.prototype.push.apply(_$$1,arguments);return _$gR.apply(this,_$$1);}',
            'function _$kF(){var _$$d=[12];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$$N(){var _$$d=[14];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$k$(){var _$$d=[87];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$iZ(){var _$$d=[121];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$_F(){var _$$d=[132];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$gb(){var _$$d=[52];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$gx(){var _$$d=[61];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$fK(){var _$$d=[177];Array.prototype.push.apply(_$$d,arguments);return _$c0.apply(this,_$$d);}',
            'function _$kF(){var _$br=[5];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$$N(){var _$br=[9];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$k$(){var _$br=[11];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$iZ(){var _$br=[12];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$_F(){var _$br=[18];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$gb(){var _$br=[31];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$gx(){var _$br=[36];Array.prototype.push.apply(_$br,arguments);return _$kw.apply(this,_$br);}',
            'function _$kF(){var _$fB=[1];Array.prototype.push.apply(_$fB,arguments);return _$gO.apply(this,_$fB);}',
            'function _$$N(){var _$fB=[2];Array.prototype.push.apply(_$fB,arguments);return _$gO.apply(this,_$fB);}',
            'function _$k$(){var _$fB=[3];Array.prototype.push.apply(_$fB,arguments);return _$gO.apply(this,_$fB);}']
        self.func_toStr = ''

    def get_time(self):
        return math.ceil(time.time() / 1000)

    # 无符号右移
    def unsinged_right_shift(self, x, y):
        if x < 0 or x > 4294967295:
            x ^= -4294967296
        return x >> y

    # 左移
    def unsinged_left(self, x, y):
        x = x << y
        if x >= 2147483648:
            x |= -4294967296
        elif x <= -2147483648:
            x &= 4294967295
        return x

    def arr_to_str(self, arr):
        return ''.join(chr(i) for i in arr)

    def big_num_to_arr(self, num):
        if type(num) != int or num < 0:
            num = 0
        a = int(num / 4294967296)
        b = num % 4294967296
        return [a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, a & 255, b >> 24 & 255, b >> 16 & 255, b >> 8 & 255,
                b & 255]

    def num_2arr(self, num):
        if type(num) != int or num < 0:
            num = 0
        elif num > 65535:
            num = 65535
        return [num >> 8, num & 255]

    # ok
    def init_8ar_inst(self, arr):
        modify_arr = self.evstr_to_arr()
        wei = 20
        inc = 4
        num = 16
        number = len(arr) - 20 - 16
        arr[wei + inc] ^= modify_arr[inc]
        while True:
            if number > 16:
                number -= 16
            else:
                wei += num
                inc = wei % number
                arr[wei + inc] ^= modify_arr[inc]
                break
            wei += num
            arr[wei + inc] ^= modify_arr[inc]
        # 根据 cd 进行修改
        sta = 2
        end = 0
        while end != len(arr):
            end = arr[sta + 2] + sta + 3
            self.vmp_dict[arr[sta]] = self.vmp({"_$_6": arr[sta + 3: end]}, [None, [], None, []])
            sta = end

    def vmp(self, i, ay):  # ok

        def xxx(*args):
            nonlocal i, ay
            fw = {}
            x_ = {}
            fw[1] = ay[1]
            fw[3] = ay[3]
            fw[0] = list(args)
            fw[2] = x_
            x_[0] = self.vmp_dict
            x_[1] = list(args)
            self.vmp2(i, 0, len(i['_$_6']), fw)

            if fw[4] == 1:
                return fw[5]

        return xxx

    def vmp2(self, a, b, c, d):  # ok
        t = a['_$_6']
        m = d[2]
        p = d[0]
        arr = {}
        l = 0
        i = 0

        def xx():
            nonlocal x, z, i, t, l, arr, m
            i += 1
            j_ = t[i]
            if j_ == 24:
                l -= 1
                x = arr[l]
                l -= 1
                z = arr[l]
            elif j_ == 37:
                t[i] = 92
                i += 1
                x = self.ident_arr[t[i]]
                t[i] = x
                l -= 1
                z = arr[l]
            elif j_ == 54:
                i += 1
                x = t[i]
                z = self.vmp_dict
            elif j_ == 63:
                i += 1
                x = t[i]
                z = m

        while i < c:
            j = t[i]
            if j == 0:
                l -= 1
                o = arr[l]
                l -= 1
                o = arr[l] * o
                arr[l] = o
                l += 1
            elif j == 2:
                i += 1
                arr[l] = p[t[i]]
                l += 1
            elif j == 6:
                i += 1
                arr[l] = m[t[i]]
                l += 1
            elif j == 9:
                l -= 1
                o = l
                xx()
                z = z[x]
                arr[l] = z(arr[o])
                l += 1
            elif j == 12:
                l -= 1
                o = arr[l]
                d[4] = 1
                d[5] = o
                i = c
            elif j == 14:
                i += 1
                y = t[i]
                i -= y
            elif j == 20:
                arr[l] = {}
                l += 1
            elif j == 23:
                i += 1
                arr[l] = self.vmp_dict[t[i]]
                l += 1
            elif j == 25:
                l -= 1
                o = arr[l]
                xx()
                z[x] = o
            elif j == 26:
                i += 1
                arr[l] = t[i]
                l += 1
            elif j == 30:
                l -= 1
                o = arr[l]
                l -= 1
                o = arr[l] > o
                arr[l] = o
                l += 1
            elif j == 36:
                l -= 1
                o = l
                xx()
                z = z[x]
                o = z(arr[o])
            elif j == 38:
                l -= 1
                o = arr[l]
                i += 1
                y = t[i]
                if not o:
                    i += y
            elif j == 42:
                l -= 1
                o = arr[l]
                l -= 1
                z = arr[l]
                arr[l] = z[o]
                l += 1
            elif j == 43:
                l -= 1
                p = arr[l]
                l -= 1
                p = arr[l] < p
                arr[l] = p
                l += 1
            elif j == 45:
                i += 1
                arr[l] = self.func_dict[t[i]]
                l += 1
            elif j == 48:
                i += 1
                x = t[i]
                arr[l] = a['_$du'][x]
                l += 1
            elif j == 55:
                p = z[x]
                z[x] += 1
            elif j == 60:
                l -= 1
                p = arr[l]
                l -= 1
                p = arr[l] + p
                arr[l] = p
                l += 1
            elif j == 63:
                i += 1
                x = t[i]
                z = m
            elif j == 72:
                l -= 1
                o = arr[l]
                l -= 1
                o = arr[l] % o
                arr[l] = o
                l += 1
            i += 1

        if c == 140:
            d[4] = 1
            d[5] = arr[0]

    def reduction_str(self, str_):
        return urllib.parse.unquote(urllib.parse.quote(str_))

    def str_to_arr(self, str_):
        str_ = self.reduction_str(str_)
        f = len(str_)
        w = []
        for i in range(f):
            w.append(ord(str_[i]))
        return w

    def To_num(self, arr):
        if type(arr) == str:
            arr = self.str_to_arr(arr)
        w = self.jz
        k = -1
        for i in range(len(arr)):
            # 最快
            k = self.unsinged_right_shift(k, 8) ^ w[(k ^ arr[i]) & 255]
        k ^= -1
        return self.unsinged_right_shift(k, 0)

    def random98(self):
        arr = []
        num = 0
        num2 = 0
        for i in range(98):
            arr.append(random.random())
            num += arr[i]
        a = num / 98
        for i in range(98):
            num2 += pow(arr[i] - a, 2)
        b = num2 / 98
        return round(a * 100), round(b * 100)

    def num_4arr(self, num):
        if type(num) != int:
            num = 0
        return [num >> 24 & 255, num >> 16 & 255, num >> 8 & 255, num & 255]

    def k_(self, arr):  # ok
        h = 0
        w = []
        while h < len(arr):
            a = self.unsinged_left(arr[h], 24)
            h += 1
            b = self.unsinged_left(arr[h], 16)
            h += 1
            c = self.unsinged_left(arr[h], 8)
            h += 1
            d = arr[h]
            h += 1
            w.append(a | b | c | d)
        return w

    def gen_tow_arr(self, x, w, h):  # ok
        f = x
        j = self.k_(f)
        a = w[4]
        g = len(j)
        v = 1
        k = j[0:]
        gk = []
        i = g
        while i < g * 4 + 28:
            gs = k[i - 1]
            if i % g == 0 or (g == 8 and i % g == 4):
                gs = self.unsinged_left(a[self.unsinged_right_shift(gs, 24)], 24) ^ self.unsinged_left(
                    a[(gs >> 16) & 255], 16) ^ self.unsinged_left(a[(gs >> 8) & 255], 8) ^ a[gs & 255]
                if i % g == 0:
                    gs = self.unsinged_left(gs, 8) ^ self.unsinged_right_shift(gs, 24) ^ self.unsinged_left(v, 24)
                    v = self.unsinged_left(v, 1) ^ (v >> 7) * 283
            k.append(k[i - g] ^ gs)
            i += 1
        e = 0
        while i:
            gs = k[i if e & 3 else i - 4]
            if i <= 4 or e < 4:
                gk.append(gs)
            else:
                gk.append(
                    h[0][a[self.unsinged_right_shift(gs, 24)]] ^ h[1][a[(gs >> 16) & 255]] ^ h[2][a[(gs >> 8) & 255]] ^
                    h[3][a[gs & 255]])
            i -= 1
            e += 1
        return [k, gk]

    def get_five_arr(self):  # ok
        # 这两个写死的
        arr1 = [
            [-966564955,
             -126059388,
             -294160487,
             -159679603,
             -855539,
             -697603139,
             -563122255,
             -1849309868,
             1613770832,
             33620227,
             -832084055,
             1445669757,
             -402719207,
             -1244145822,
             1303096294,
             -327780710,
             -1882535355,
             528646813,
             -1983264448,
             -92439161,
             -268764651,
             -1302767125,
             -1907931191,
             -68095989,
             1101901292,
             -1277897625,
             1604494077,
             1169141738,
             597466303,
             1403299063,
             -462261610,
             -1681866661,
             1974974402,
             -503448292,
             1033081774,
             1277568618,
             1815492186,
             2118074177,
             -168298750,
             -2083730353,
             1748251740,
             1369810420,
             -773462732,
             -101584632,
             -495881837,
             -1411852173,
             1647391059,
             706024767,
             134480908,
             -1782069422,
             1176707941,
             -1648114850,
             806885416,
             932615841,
             168101135,
             798661301,
             235341577,
             605164086,
             461406363,
             -538779075,
             -840176858,
             1311188841,
             2142417613,
             -361400929,
             302582043,
             495158174,
             1479289972,
             874125870,
             907746093,
             -596742478,
             -1269146898,
             1537253627,
             -1538108682,
             1983593293,
             -1210657183,
             2108928974,
             1378429307,
             -572267714,
             1580150641,
             327451799,
             -1504488459,
             -1177431704,
             0,
             -1041371860,
             1075847264,
             -469959649,
             2041688520,
             -1235526675,
             -731223362,
             -1916023994,
             1740553945,
             1916352843,
             -1807070498,
             -1739830060,
             -1336387352,
             -2049978550,
             -1143943061,
             -974131414,
             1336584933,
             -302253290,
             -2042412091,
             -1706209833,
             1714631509,
             293963156,
             -1975171633,
             -369493744,
             67240454,
             -25198719,
             -1605349136,
             2017213508,
             631218106,
             1269344483,
             -1571728909,
             1571005438,
             -2143272768,
             93294474,
             1066570413,
             563977660,
             1882732616,
             -235539196,
             1673313503,
             2008463041,
             -1344611723,
             1109467491,
             537923632,
             -436207846,
             -34344178,
             -1076702611,
             -2117218996,
             403442708,
             638784309,
             -1007883217,
             -1101045791,
             899127202,
             -2008791860,
             773265209,
             -1815821225,
             1437050866,
             -58818942,
             2050833735,
             -932944724,
             -1168286233,
             840505643,
             -428641387,
             -1067425632,
             427917720,
             -1638969391,
             -1545806721,
             1143087718,
             1412049534,
             999329963,
             193497219,
             -1941551414,
             -940642775,
             1807268051,
             672404540,
             -1478566279,
             -1134666014,
             369822493,
             -1378100362,
             -606019525,
             1681011286,
             1949973070,
             336202270,
             -1840690725,
             201721354,
             1210328172,
             -1201906460,
             -1614626211,
             -1110191250,
             1135389935,
             -1000185178,
             965841320,
             831886756,
             -739974089,
             -226920053,
             -706222286,
             -1949775805,
             1849112409,
             -630362697,
             26054028,
             -1311386268,
             -1672589614,
             1235855840,
             -663982924,
             -1403627782,
             -202050553,
             -806688219,
             -899324497,
             -193299826,
             1202630377,
             268961816,
             1874508501,
             -260540280,
             1243948399,
             1546530418,
             941366308,
             1470539505,
             1941222599,
             -1748580783,
             -873928669,
             -1579295364,
             -395021156,
             1042226977,
             -1773450275,
             1639824860,
             227249030,
             260737669,
             -529502064,
             2084453954,
             1907733956,
             -865704278,
             -1874310952,
             100860677,
             -134810111,
             470683154,
             -1033805405,
             1781871967,
             -1370007559,
             1773779408,
             394692241,
             -1715355304,
             974986535,
             664706745,
             -639508168,
             -336005101,
             731420851,
             571543859,
             -764843589,
             -1445340816,
             126783113,
             865375399,
             765172662,
             1008606754,
             361203602,
             -907417312,
             -2016489911,
             -1437248001,
             1344809080,
             -1512054918,
             59542671,
             1503764984,
             160008576,
             437062935,
             1707065306,
             -672733647,
             -2076032314,
             -798463816,
             -2109652541,
             697932208,
             1512910199,
             504303377,
             2075177163,
             -1470868228,
             1841019862,
             739644986
             ],
            [
                -1513725085,
                -2064089988,
                -1712425097,
                -1913226373,
                234877682,
                -1110021269,
                -1310822545,
                1418839493,
                1348481072,
                50462977,
                -1446090905,
                2102799147,
                434634494,
                1656084439,
                -431117397,
                -1695779210,
                1167051466,
                -1658879358,
                1082771913,
                -2013627011,
                368048890,
                -340633255,
                -913422521,
                201060592,
                -331240019,
                1739838676,
                -44064094,
                -364531793,
                -1088185188,
                -145513308,
                -1763413390,
                1536934080,
                -1032472649,
                484572669,
                -1371696237,
                1783375398,
                1517041206,
                1098792767,
                49674231,
                1334037708,
                1550332980,
                -195975771,
                886171109,
                150598129,
                -1813876367,
                1940642008,
                1398944049,
                1059722517,
                201851908,
                1385547719,
                1699095331,
                1587397571,
                674240536,
                -1590192490,
                252314885,
                -1255171430,
                151914247,
                908333586,
                -1692696448,
                1038082786,
                651029483,
                1766729511,
                -847269198,
                -1612024459,
                454166793,
                -1642232957,
                1951935532,
                775166490,
                758520603,
                -1294176658,
                -290170278,
                -77881184,
                -157003182,
                1299594043,
                1639438038,
                -830622797,
                2068982057,
                1054729187,
                1901997871,
                -1760328572,
                -173649069,
                1757008337,
                0,
                750906861,
                1614815264,
                535035132,
                -931548751,
                -306816165,
                -1093375382,
                1183697867,
                -647512386,
                1265776953,
                -560706998,
                -728216500,
                -391096232,
                1250283471,
                1807470800,
                717615087,
                -447763798,
                384695291,
                -981056701,
                -677753523,
                1432761139,
                -1810791035,
                -813021883,
                283769337,
                100925954,
                -2114027649,
                -257929136,
                1148730428,
                -1171939425,
                -481580888,
                -207466159,
                -27417693,
                -1065336768,
                -1979347057,
                -1388342638,
                -1138647651,
                1215313976,
                82966005,
                -547111748,
                -1049119050,
                1974459098,
                1665278241,
                807407632,
                451280895,
                251524083,
                1841287890,
                1283575245,
                337120268,
                891687699,
                801369324,
                -507617441,
                -1573546089,
                -863484860,
                959321879,
                1469301956,
                -229267545,
                -2097381762,
                1199193405,
                -1396153244,
                -407216803,
                724703513,
                -1780059277,
                -1598005152,
                -1743158911,
                -778154161,
                2141445340,
                1715741218,
                2119445034,
                -1422159728,
                -2096396152,
                -896776634,
                700968686,
                -747915080,
                1009259540,
                2041044702,
                -490971554,
                487983883,
                1991105499,
                1004265696,
                1449407026,
                1316239930,
                504629770,
                -611169975,
                168560134,
                1816667172,
                -457679780,
                1570751170,
                1857934291,
                -280777556,
                -1497079198,
                -1472622191,
                -1540254315,
                936633572,
                -1947043463,
                852879335,
                1133234376,
                1500395319,
                -1210421907,
                -1946055283,
                1689376213,
                -761508274,
                -532043351,
                -1260884884,
                -89369002,
                133428468,
                634383082,
                -1345690267,
                -1896580486,
                -381178194,
                403703816,
                -714097990,
                -1997506440,
                1867130149,
                1918643758,
                607656988,
                -245913946,
                -948718412,
                1368901318,
                600565992,
                2090982877,
                -1662487436,
                557719327,
                -577352885,
                -597574211,
                -2045932661,
                -2062579062,
                -1864339344,
                1115438654,
                -999180875,
                -1429445018,
                -661632952,
                84280067,
                33027830,
                303828494,
                -1547542175,
                1600795957,
                -106014889,
                -798377543,
                -1860729210,
                1486471617,
                658119965,
                -1188585826,
                953803233,
                334231800,
                -1288988520,
                857870609,
                -1143838359,
                1890179545,
                -1995993458,
                -1489791852,
                -1238525029,
                574365214,
                -1844082809,
                550103529,
                1233637070,
                -5614251,
                2018519080,
                2057691103,
                -1895592820,
                -128343647,
                -2146858615,
                387583245,
                -630865985,
                836232934,
                -964410814,
                -1194301336,
                -1014873791,
                -1339450983,
                2002398509,
                287182607,
                -881086288,
                -56077228,
                -697451589,
                975967766
            ],
            [
                1671808611,
                2089089148,
                2006576759,
                2072901243,
                -233963534,
                1807603307,
                1873927791,
                -984313403,
                810573872,
                16974337,
                1739181671,
                729634347,
                -31856642,
                -681396777,
                -1410970197,
                1989864566,
                -901410870,
                -2103631998,
                -918517303,
                2106063485,
                -99225606,
                1508618841,
                1204391495,
                -267650064,
                -1377025619,
                -731401260,
                -1560453214,
                -1343601233,
                -1665195108,
                -1527295068,
                1922491506,
                -1067738176,
                -1211992649,
                -48438787,
                -1817297517,
                644500518,
                911895606,
                1061256767,
                -150800905,
                -867204148,
                878471220,
                -1510714971,
                -449523227,
                -251069967,
                1905517169,
                -663508008,
                827548209,
                356461077,
                67897348,
                -950889017,
                593839651,
                -1017209405,
                405286936,
                -1767819370,
                84871685,
                -1699401830,
                118033927,
                305538066,
                -2137318528,
                -499261470,
                -349778453,
                661212711,
                -1295155278,
                1973414517,
                152769033,
                -2086789757,
                745822252,
                439235610,
                455947803,
                1857215598,
                1525593178,
                -1594139744,
                1391895634,
                994932283,
                -698239018,
                -1278313037,
                695947817,
                -482419229,
                795958831,
                -2070473852,
                1408607827,
                -781665839,
                0,
                -315833875,
                543178784,
                -65018884,
                -1312261711,
                1542305371,
                1790891114,
                -884568629,
                -1093048386,
                961245753,
                1256100938,
                1289001036,
                1491644504,
                -817199665,
                -798245936,
                -282409489,
                -1427812438,
                -82383365,
                1137018435,
                1305975373,
                861234739,
                -2053893755,
                1171229253,
                -116332039,
                33948674,
                2139225727,
                1357946960,
                1011120188,
                -1615190625,
                -1461498968,
                1374921297,
                -1543610973,
                1086357568,
                -1886780017,
                -1834139758,
                -1648615011,
                944271416,
                -184225291,
                -1126210628,
                -1228834890,
                -629821478,
                560153121,
                271589392,
                -15014401,
                -217121293,
                -764559406,
                -850624051,
                202643468,
                322250259,
                -332413972,
                1608629855,
                -1750977129,
                1154254916,
                389623319,
                -1000893500,
                -1477290585,
                2122513534,
                1028094525,
                1689045092,
                1575467613,
                422261273,
                1939203699,
                1621147744,
                -2120738431,
                1339137615,
                -595614756,
                577127458,
                712922154,
                -1867826288,
                -2004677752,
                1187679302,
                -299251730,
                -1194103880,
                339486740,
                -562452514,
                1591917662,
                186455563,
                -612979237,
                -532948000,
                844522546,
                978220090,
                169743370,
                1239126601,
                101321734,
                611076132,
                1558493276,
                -1034051646,
                -747717165,
                -1393605716,
                1655096418,
                -1851246191,
                -1784401515,
                -466103324,
                2039214713,
                -416098841,
                -935097400,
                928607799,
                1840765549,
                -1920204403,
                -714821163,
                1322425422,
                -1444918871,
                1823791212,
                1459268694,
                -200805388,
                -366620694,
                1706019429,
                2056189050,
                -1360443474,
                135794696,
                -1160417350,
                2022240376,
                628050469,
                779246638,
                472135708,
                -1494132826,
                -1261997132,
                -967731258,
                -400307224,
                -579034659,
                1956440180,
                522272287,
                1272813131,
                -1109630531,
                -1954148981,
                -1970991222,
                1888542832,
                1044544574,
                -1245417035,
                1722469478,
                1222152264,
                50660867,
                -167643146,
                236067854,
                1638122081,
                895445557,
                1475980887,
                -1177523783,
                -2037311610,
                -1051158079,
                489110045,
                -1632032866,
                -516367903,
                -132912136,
                -1733088360,
                288563729,
                1773916777,
                -646927911,
                -1903622258,
                -1800981612,
                -1682559589,
                505560094,
                -2020469369,
                -383727127,
                -834041906,
                1442818645,
                678973480,
                -545610273,
                -1936784500,
                -1577559647,
                -1988097655,
                219617805,
                -1076206145,
                -432941082,
                1120306242,
                1756942440,
                1103331905,
                -1716508263,
                762796589,
                252780047,
                -1328841808,
                1425844308,
                -1143575109,
                372911126
            ],
            [
                1667474886,
                2088535288,
                2004326894,
                2071694838,
                -219017729,
                1802223062,
                1869591006,
                -976923503,
                808472672,
                16843522,
                1734846926,
                724270422,
                -16901657,
                -673750347,
                -1414797747,
                1987484396,
                -892713585,
                -2105369313,
                -909557623,
                2105378810,
                -84273681,
                1499065266,
                1195886990,
                -252703749,
                -1381110719,
                -724277325,
                -1566376609,
                -1347425723,
                -1667449053,
                -1532692653,
                1920112356,
                -1061135461,
                -1212693899,
                -33743647,
                -1819038147,
                640051788,
                909531756,
                1061110142,
                -134806795,
                -859025533,
                875846760,
                -1515850671,
                -437963567,
                -235861767,
                1903268834,
                -656903253,
                825316194,
                353713962,
                67374088,
                -943238507,
                589522246,
                -1010606435,
                404236336,
                -1768513225,
                84217610,
                -1701137105,
                117901582,
                303183396,
                -2139055333,
                -488489505,
                -336910643,
                656894286,
                -1296904833,
                1970642922,
                151591698,
                -2088526307,
                741110872,
                437923380,
                454765878,
                1852748508,
                1515908788,
                -1600062629,
                1381168804,
                993742198,
                -690593353,
                -1280061827,
                690584402,
                -471646499,
                791638366,
                -2071685357,
                1398011302,
                -774805319,
                0,
                -303223615,
                538992704,
                -50585629,
                -1313748871,
                1532751286,
                1785380564,
                -875870579,
                -1094788761,
                960056178,
                1246420628,
                1280103576,
                1482221744,
                -808498555,
                -791647301,
                -269538619,
                -1431640753,
                -67430675,
                1128514950,
                1296947098,
                859002214,
                -2054843375,
                1162203018,
                -101117719,
                33687044,
                2139062782,
                1347481760,
                1010582648,
                -1616922075,
                -1465326773,
                1364325282,
                -1549533603,
                1077985408,
                -1886418427,
                -1835881153,
                -1650607071,
                943212656,
                -168491791,
                -1128472733,
                -1229536905,
                -623217233,
                555836226,
                269496352,
                -58651,
                -202174723,
                -757961281,
                -842183551,
                202118168,
                320025894,
                -320065597,
                1600119230,
                -1751670219,
                1145359496,
                387397934,
                -993765485,
                -1482165675,
                2122220284,
                1027426170,
                1684319432,
                1566435258,
                421079858,
                1936954854,
                1616945344,
                -2122213351,
                1330631070,
                -589529181,
                572679748,
                707427924,
                -1869567173,
                -2004319477,
                1179044492,
                -286381625,
                -1195846805,
                336870440,
                -555845209,
                1583276732,
                185277718,
                -606374227,
                -522175525,
                842159716,
                976899700,
                168435220,
                1229577106,
                101059084,
                606366792,
                1549591736,
                -1027449441,
                -741118275,
                -1397952701,
                1650632388,
                -1852725191,
                -1785355215,
                -454805549,
                2038008818,
                -404278571,
                -926399605,
                926374254,
                1835907034,
                -1920103423,
                -707435343,
                1313788572,
                -1448484791,
                1819063512,
                1448540844,
                -185333773,
                -353753649,
                1701162954,
                2054852340,
                -1364268729,
                134748176,
                -1162160785,
                2021165296,
                623210314,
                774795868,
                471606328,
                -1499008681,
                -1263220877,
                -960081513,
                -387439669,
                -572687199,
                1953799400,
                522133822,
                1263263126,
                -1111630751,
                -1953790451,
                -1970633457,
                1886425312,
                1044267644,
                -1246378895,
                1718004428,
                1212733584,
                50529542,
                -151649801,
                235803164,
                1633788866,
                892690282,
                1465383342,
                -1179004823,
                -2038001385,
                -1044293479,
                488449850,
                -1633765081,
                -505333543,
                -117959701,
                -1734823125,
                286339874,
                1768537042,
                -640061271,
                -1903261433,
                -1802197197,
                -1684294099,
                505291324,
                -2021158379,
                -370597687,
                -825341561,
                1431699370,
                673740880,
                -539002203,
                -1936945405,
                -1583220647,
                -1987477495,
                218961690,
                -1077945755,
                -421121577,
                1111672452,
                1751693520,
                1094828930,
                -1717981143,
                757954394,
                252645662,
                -1330590853,
                1414855848,
                -1145317779,
                370555436
            ],
            [
                99,
                124,
                119,
                123,
                242,
                107,
                111,
                197,
                48,
                1,
                103,
                43,
                254,
                215,
                171,
                118,
                202,
                130,
                201,
                125,
                250,
                89,
                71,
                240,
                173,
                212,
                162,
                175,
                156,
                164,
                114,
                192,
                183,
                253,
                147,
                38,
                54,
                63,
                247,
                204,
                52,
                165,
                229,
                241,
                113,
                216,
                49,
                21,
                4,
                199,
                35,
                195,
                24,
                150,
                5,
                154,
                7,
                18,
                128,
                226,
                235,
                39,
                178,
                117,
                9,
                131,
                44,
                26,
                27,
                110,
                90,
                160,
                82,
                59,
                214,
                179,
                41,
                227,
                47,
                132,
                83,
                209,
                0,
                237,
                32,
                252,
                177,
                91,
                106,
                203,
                190,
                57,
                74,
                76,
                88,
                207,
                208,
                239,
                170,
                251,
                67,
                77,
                51,
                133,
                69,
                249,
                2,
                127,
                80,
                60,
                159,
                168,
                81,
                163,
                64,
                143,
                146,
                157,
                56,
                245,
                188,
                182,
                218,
                33,
                16,
                255,
                243,
                210,
                205,
                12,
                19,
                236,
                95,
                151,
                68,
                23,
                196,
                167,
                126,
                61,
                100,
                93,
                25,
                115,
                96,
                129,
                79,
                220,
                34,
                42,
                144,
                136,
                70,
                238,
                184,
                20,
                222,
                94,
                11,
                219,
                224,
                50,
                58,
                10,
                73,
                6,
                36,
                92,
                194,
                211,
                172,
                98,
                145,
                149,
                228,
                121,
                231,
                200,
                55,
                109,
                141,
                213,
                78,
                169,
                108,
                86,
                244,
                234,
                101,
                122,
                174,
                8,
                186,
                120,
                37,
                46,
                28,
                166,
                180,
                198,
                232,
                221,
                116,
                31,
                75,
                189,
                139,
                138,
                112,
                62,
                181,
                102,
                72,
                3,
                246,
                14,
                97,
                53,
                87,
                185,
                134,
                193,
                29,
                158,
                225,
                248,
                152,
                17,
                105,
                217,
                142,
                148,
                155,
                30,
                135,
                233,
                206,
                85,
                40,
                223,
                140,
                161,
                137,
                13,
                191,
                230,
                66,
                104,
                65,
                153,
                45,
                15,
                176,
                84,
                187,
                22
            ]
        ]
        arr2 = [
            [
                1374988112,
                2118214995,
                437757123,
                975658646,
                1001089995,
                530400753,
                -1392879445,
                1273168787,
                540080725,
                -1384747530,
                -1999866223,
                -184398811,
                1340463100,
                -987051049,
                641025152,
                -1251826801,
                -558802359,
                632953703,
                1172967064,
                1576976609,
                -1020300030,
                -2125664238,
                -1924753501,
                1809054150,
                59727847,
                361929877,
                -1083344149,
                -1789765158,
                -725712083,
                1484005843,
                1239443753,
                -1899378620,
                1975683434,
                -191989384,
                -1722270101,
                666464733,
                -1092530250,
                -259478249,
                -920605594,
                2110667444,
                1675577880,
                -451268222,
                -1756286112,
                1649639237,
                -1318815776,
                -1150570876,
                -25059300,
                -116905068,
                1883793496,
                -1891238631,
                -1797362553,
                1383856311,
                -1418472669,
                1917518562,
                -484470953,
                1716890410,
                -1293211641,
                800440835,
                -2033878118,
                -751368027,
                807962610,
                599762354,
                33778362,
                -317291940,
                -1966138325,
                -1485196142,
                -217582864,
                1315562145,
                1708848333,
                101039829,
                -785096161,
                -995688822,
                875451293,
                -1561111136,
                92987698,
                -1527321739,
                193195065,
                1080094634,
                1584504582,
                -1116860335,
                1042385657,
                -1763899843,
                -583137874,
                1306967366,
                -1856729675,
                1908694277,
                67556463,
                1615861247,
                429456164,
                -692196969,
                -1992277044,
                1742315127,
                -1326955843,
                126454664,
                -417768648,
                2043211483,
                -1585706425,
                2084704233,
                -125559095,
                0,
                159417987,
                841739592,
                504459436,
                1817866830,
                -49348613,
                260388950,
                1034867998,
                908933415,
                168810852,
                1750902305,
                -1688513327,
                607530554,
                202008497,
                -1822955761,
                -1259432238,
                463180190,
                -2134850225,
                1641816226,
                1517767529,
                470948374,
                -493635062,
                -1063245083,
                1008918595,
                303765277,
                235474187,
                -225720403,
                766945465,
                337553864,
                1475418501,
                -1351284916,
                -291906117,
                -1551933187,
                -150919521,
                1551037884,
                1147550661,
                1543208500,
                -1958532746,
                -886847780,
                -1225917336,
                -1192955549,
                -684598070,
                1113818384,
                328671808,
                -2067394272,
                -2058738563,
                -759480840,
                -1359400431,
                -953573011,
                496906059,
                -592301837,
                226906860,
                2009195472,
                733156972,
                -1452230247,
                294930682,
                1206477858,
                -1459843900,
                -1594867942,
                1451044056,
                573804783,
                -2025238841,
                -650587711,
                -1932877058,
                -1730933962,
                -1493859889,
                -1518674392,
                -625504730,
                1068351396,
                742039012,
                1350078989,
                1784663195,
                1417561698,
                -158526526,
                -1864845080,
                775550814,
                -2101104651,
                -1621262146,
                1775276924,
                1876241833,
                -819653965,
                -928212677,
                270040487,
                -392404114,
                -616842373,
                -853116919,
                1851332852,
                -325404927,
                -2091935064,
                -426414491,
                -1426069890,
                566021896,
                -283776794,
                -1159226407,
                1248802510,
                -358676012,
                699432150,
                832877231,
                708780849,
                -962227152,
                899835584,
                1951317047,
                -58537306,
                -527380304,
                866637845,
                -251357110,
                1106041591,
                2144161806,
                395441711,
                1984812685,
                1139781709,
                -861254316,
                -459930401,
                -1630423581,
                1282050075,
                -1054072904,
                1181045119,
                -1654724092,
                25965917,
                -91786125,
                -83148498,
                -1285087910,
                -1831087534,
                -384805325,
                1842759443,
                -1697160820,
                933301370,
                1509430414,
                -351060855,
                -827774994,
                -1218328267,
                -518199827,
                2051518780,
                -1663901863,
                1441952575,
                404016761,
                1942435775,
                1408749034,
                1610459739,
                -549621996,
                2017778566,
                -894438527,
                -1184316354,
                941896748,
                -1029488545,
                371049330,
                -1126030068,
                675039627,
                -15887039,
                967311729,
                135050206,
                -659233636,
                1683407248,
                2076935265,
                -718096784,
                1215061108,
                -793225406
            ],
            [
                1347548327,
                1400783205,
                -1021700188,
                -1774573730,
                -885281941,
                -249586363,
                -1414727080,
                -1823743229,
                1428173050,
                -156404115,
                -1853305738,
                636813900,
                -61872681,
                -674944309,
                -2144979644,
                -1883938141,
                1239331162,
                1730525723,
                -1740248562,
                -513933632,
                46346101,
                310463728,
                -1551022441,
                -966011911,
                -419197089,
                -1793748324,
                -339776134,
                -627748263,
                768917123,
                -749177823,
                692707433,
                1150208456,
                1786102409,
                2029293177,
                1805211710,
                -584599183,
                -1229004465,
                401639597,
                1724457132,
                -1266823622,
                409198410,
                -2098914767,
                1620529459,
                1164071807,
                -525245321,
                -2068091986,
                486441376,
                -1795618773,
                1483753576,
                428819965,
                -2020286868,
                -1219331080,
                598438867,
                -495826174,
                1474502543,
                711349675,
                129166120,
                53458370,
                -1702443653,
                -1512884472,
                -231724921,
                -1306280027,
                -1174273174,
                1559041666,
                730517276,
                -1834518092,
                -252508174,
                -1588696606,
                -848962828,
                -721025602,
                533804130,
                -1966823682,
                -1657524653,
                -1599933611,
                839224033,
                1973745387,
                957055980,
                -1438621457,
                106852767,
                1371368976,
                -113368694,
                1033297158,
                -1361232379,
                1179510461,
                -1248766835,
                91341917,
                1862534868,
                -10465259,
                605657339,
                -1747534359,
                -863420349,
                2003294622,
                -1112479678,
                -2012771957,
                954669403,
                -612775698,
                1201765386,
                -377732593,
                -906460130,
                0,
                -2096529274,
                1211247597,
                -1407315600,
                1315723890,
                -67301633,
                1443857720,
                507358933,
                657861945,
                1678381017,
                560487590,
                -778347692,
                975451694,
                -1324610969,
                261314535,
                -759894378,
                -1642357871,
                1333838021,
                -1570644960,
                1767536459,
                370938394,
                182621114,
                -440360918,
                1128014560,
                487725847,
                185469197,
                -1376613433,
                -1188186456,
                -938205527,
                -2057834215,
                1286567175,
                -1141990947,
                -39616672,
                -1611202266,
                -1134791947,
                -985373125,
                878443390,
                1988838185,
                -590666810,
                1756818940,
                1673061617,
                -891866660,
                272786309,
                1075025698,
                545572369,
                2105887268,
                -120407235,
                296679730,
                1841768865,
                1260232239,
                -203640272,
                -334657966,
                -797457949,
                1814803222,
                -1716948807,
                -99511224,
                575138148,
                -995558260,
                446754879,
                -665420500,
                -282971248,
                -947435186,
                -1042728751,
                -24327518,
                915985419,
                -811141759,
                681933534,
                651868046,
                -1539330625,
                -466863459,
                223377554,
                -1687527476,
                1649704518,
                -1024029421,
                -393160520,
                1580087799,
                -175979601,
                -1096852096,
                2087309459,
                -1452288723,
                -1278270190,
                1003007129,
                -1492117379,
                1860738147,
                2077965243,
                164439672,
                -194094824,
                32283319,
                -1467789414,
                1709610350,
                2125135846,
                136428751,
                -420538904,
                -642062437,
                -833982666,
                -722821367,
                -701910916,
                -1355701070,
                824852259,
                818324884,
                -1070226842,
                930369212,
                -1493400886,
                -1327460144,
                355706840,
                1257309336,
                -146674470,
                243256656,
                790073846,
                -1921626666,
                1296297904,
                1422699085,
                -538667516,
                -476130891,
                457992840,
                -1195299809,
                2135319889,
                77422314,
                1560382517,
                1945798516,
                788204353,
                1521706781,
                1385356242,
                870912086,
                325965383,
                -1936009375,
                2050466060,
                -1906706412,
                -1981082820,
                -288446169,
                901210569,
                -304014107,
                1014646705,
                1503449823,
                1062597235,
                2031621326,
                -1082931401,
                -363595827,
                1533017514,
                350174575,
                -2038938405,
                -2117423117,
                1052338372,
                741876788,
                1606591296,
                1914052035,
                213705253,
                -1960297399,
                1107234197,
                1899603969,
                -569897805,
                -1663519516,
                -1872472383,
                1635502980,
                1893020342,
                1950903388,
                1120974935
            ],
            [
                -1487908364,
                1699970625,
                -1530717673,
                1586903591,
                1808481195,
                1173430173,
                1487645946,
                59984867,
                -95084496,
                1844882806,
                1989249228,
                1277555970,
                -671330331,
                -875051734,
                1149249077,
                -1550863006,
                1514790577,
                459744698,
                244860394,
                -1058972162,
                1963115311,
                -267222708,
                -1750889146,
                -104436781,
                1608975247,
                -1667951214,
                2062270317,
                1507497298,
                -2094148418,
                567498868,
                1764313568,
                -935031095,
                -1989511742,
                2037970062,
                1047239000,
                1910319033,
                1337376481,
                -1390940024,
                -1402549984,
                984907214,
                1243112415,
                830661914,
                861968209,
                2135253587,
                2011214180,
                -1367032981,
                -1608712575,
                731183368,
                1750626376,
                -48656571,
                1820824798,
                -122203525,
                -752637069,
                48394827,
                -1890065633,
                -1423284651,
                671593195,
                -1039978571,
                2073724613,
                145085239,
                -2014171096,
                -1515052097,
                1790575107,
                -2107839210,
                472615631,
                -1265457287,
                -219090169,
                -492745111,
                -187865638,
                -1093335547,
                1646252340,
                -24460122,
                1402811438,
                1436590835,
                -516815478,
                -344611594,
                -331805821,
                -274055072,
                -1626972559,
                273792366,
                -1963377119,
                104699613,
                95345982,
                -1119466010,
                -1917480620,
                1560637892,
                -730921978,
                369057872,
                -81520232,
                -375925059,
                1137477952,
                -1636341799,
                1119727848,
                -1954019447,
                1530455833,
                -287606328,
                172466556,
                266959938,
                516552836,
                0,
                -2038232704,
                -314035669,
                1890328081,
                1917742170,
                -262898,
                945164165,
                -719438418,
                958871085,
                -647755249,
                -1507760036,
                1423022939,
                775562294,
                1739656202,
                -418409641,
                -1764576018,
                -1851909221,
                -984645440,
                547512796,
                1265195639,
                437656594,
                -1173691757,
                719700128,
                -532464606,
                387781147,
                218828297,
                -944901493,
                -1464259146,
                -1446505442,
                428169201,
                122466165,
                -574886247,
                1627235199,
                648017665,
                -172204942,
                1002783846,
                2117360635,
                695634755,
                -958608605,
                -60246291,
                -245122844,
                -590686415,
                -2062531997,
                574624663,
                287343814,
                612205898,
                1039717051,
                840019705,
                -1586641111,
                793451934,
                821288114,
                1391201670,
                -472877119,
                376187827,
                -1181111952,
                1224348052,
                1679968233,
                -1933268740,
                1058709744,
                752375421,
                -1863376333,
                1321699145,
                -775825096,
                -1560376118,
                188127444,
                -2117097739,
                -567761542,
                -1910056265,
                -1079754835,
                -1645990854,
                -1844621192,
                -862229921,
                1180849278,
                331544205,
                -1192718120,
                -144822727,
                -1342864701,
                -2134991011,
                -1820562992,
                766078933,
                313773861,
                -1724135252,
                2108100632,
                1668212892,
                -1149510853,
                2013908262,
                418672217,
                -1224610662,
                -1700232369,
                1852171925,
                -427906305,
                -821550660,
                -387518699,
                -1680229657,
                919489135,
                164948639,
                2094410160,
                -1297141340,
                590424639,
                -1808742747,
                1723872674,
                -1137216434,
                -895026046,
                -793714544,
                -669699161,
                -1739919100,
                -621329940,
                1343127501,
                -164685935,
                -695372211,
                -1337113617,
                1297403050,
                81781910,
                -1243373871,
                -2011476886,
                532201772,
                1367295589,
                -368796322,
                895287692,
                1953757831,
                1093597963,
                492483431,
                -766340389,
                1446242576,
                1192455638,
                1636604631,
                209336225,
                344873464,
                1015671571,
                669961897,
                -919226527,
                -437395172,
                -1321436601,
                -547775278,
                1933530610,
                -830924780,
                935293895,
                -840281097,
                -1436852227,
                1863638845,
                -611944380,
                -209597777,
                -1002522264,
                875313188,
                1080017571,
                -1015933411,
                621591778,
                1233856572,
                -1790836979,
                24197544,
                -1277294580,
                -459482956,
                -1047501738,
                -2073986101,
                -1234119374,
                1551124588,
                1463996600
            ],
            [
                -190361519,
                1097159550,
                396673818,
                660510266,
                -1418998981,
                -1656360673,
                -94852180,
                -486304949,
                821712160,
                1986918061,
                -864644728,
                38544885,
                -438830001,
                718002117,
                893681702,
                1654886325,
                -1319482914,
                -1172609243,
                -368142267,
                -20913827,
                796197571,
                1290801793,
                1184342925,
                -738605461,
                -1889540349,
                -1835231979,
                1836772287,
                1381620373,
                -1098699308,
                1948373848,
                -529979063,
                -909622130,
                -1031181707,
                -1904641804,
                1480485785,
                -1183720153,
                -514869570,
                -2001922064,
                548169417,
                -835013507,
                -548792221,
                439452389,
                1362321559,
                1400849762,
                1685577905,
                1806599355,
                -2120213250,
                137073913,
                1214797936,
                1174215055,
                -563312748,
                2079897426,
                1943217067,
                1258480242,
                529487843,
                1437280870,
                -349698126,
                -1245576401,
                -981755258,
                923313619,
                679998000,
                -1079659997,
                57326082,
                377642221,
                -820237430,
                2041877159,
                133361907,
                1776460110,
                -621490843,
                96392454,
                878845905,
                -1493267772,
                777231668,
                -212492126,
                -1964953083,
                -152341084,
                -2081670901,
                1626319424,
                1906247262,
                1846563261,
                562755902,
                -586793578,
                1040559837,
                -423803315,
                1418573201,
                -1000536719,
                114585348,
                1343618912,
                -1728371687,
                -1108764714,
                1078185097,
                -643926169,
                -398279248,
                -1987344377,
                425408743,
                -923870343,
                2081048481,
                1108339068,
                -2078357000,
                0,
                -2138668279,
                736970802,
                292596766,
                1517440620,
                251657213,
                -2059905521,
                -1361764803,
                758720310,
                265905162,
                1554391400,
                1532285339,
                908999204,
                174567692,
                1474760595,
                -292105548,
                -1684955621,
                -1060810880,
                -601841055,
                2001430874,
                303699484,
                -1816524062,
                -1607801408,
                585122620,
                454499602,
                151849742,
                -1949848078,
                -1230456531,
                514443284,
                -249985705,
                1963412655,
                -1713521682,
                2137062819,
                19308535,
                1928707164,
                1715193156,
                -75615141,
                1126790795,
                600235211,
                -302225226,
                -453942344,
                836553431,
                1669664834,
                -1759363053,
                -971956092,
                1243905413,
                -1153566510,
                -114159186,
                698445255,
                -1641067747,
                -1305414692,
                -2041385971,
                -1042034569,
                -1290376149,
                1891211689,
                -1807156719,
                -379313593,
                -57883480,
                -264299872,
                2100090966,
                865136418,
                1229899655,
                953270745,
                -895287668,
                -737462632,
                -176042074,
                2061379749,
                -1215420710,
                -1379949505,
                983426092,
                2022837584,
                1607244650,
                2118541908,
                -1928084746,
                -658970480,
                972512814,
                -1011878526,
                1568718495,
                -795640727,
                -718427793,
                621982671,
                -1399243832,
                410887952,
                -1671205144,
                1002142683,
                645401037,
                1494807662,
                -1699282452,
                1335535747,
                -1787927066,
                -1671510,
                -1127282655,
                367585007,
                -409216582,
                1865862730,
                -1626745622,
                -1333995991,
                -1531793615,
                1059270954,
                -1517014842,
                -1570324427,
                1320957812,
                -2100648196,
                -1865371424,
                -1479011021,
                77089521,
                -321194175,
                -850391425,
                -1846137065,
                1305906550,
                -273658557,
                -1437772596,
                -1778065436,
                -776608866,
                1787304780,
                740276417,
                1699839814,
                1592394909,
                -1942659839,
                -2022411270,
                188821243,
                1729977011,
                -606973294,
                274084841,
                -699985043,
                -681472870,
                -1593017801,
                -132870567,
                322734571,
                -1457000754,
                1640576439,
                484830689,
                1202797690,
                -757114468,
                -227328171,
                349075736,
                -952647821,
                -137500077,
                -39167137,
                1030690015,
                1155237496,
                -1342996022,
                1757691577,
                607398968,
                -1556062270,
                499347990,
                -500888388,
                1011452712,
                227885567,
                -1476300487,
                213114376,
                -1260086056,
                1455525988,
                -880516741,
                850817237,
                1817998408,
                -1202240816
            ],
            [
                82,
                9,
                106,
                213,
                48,
                54,
                165,
                56,
                191,
                64,
                163,
                158,
                129,
                243,
                215,
                251,
                124,
                227,
                57,
                130,
                155,
                47,
                255,
                135,
                52,
                142,
                67,
                68,
                196,
                222,
                233,
                203,
                84,
                123,
                148,
                50,
                166,
                194,
                35,
                61,
                238,
                76,
                149,
                11,
                66,
                250,
                195,
                78,
                8,
                46,
                161,
                102,
                40,
                217,
                36,
                178,
                118,
                91,
                162,
                73,
                109,
                139,
                209,
                37,
                114,
                248,
                246,
                100,
                134,
                104,
                152,
                22,
                212,
                164,
                92,
                204,
                93,
                101,
                182,
                146,
                108,
                112,
                72,
                80,
                253,
                237,
                185,
                218,
                94,
                21,
                70,
                87,
                167,
                141,
                157,
                132,
                144,
                216,
                171,
                0,
                140,
                188,
                211,
                10,
                247,
                228,
                88,
                5,
                184,
                179,
                69,
                6,
                208,
                44,
                30,
                143,
                202,
                63,
                15,
                2,
                193,
                175,
                189,
                3,
                1,
                19,
                138,
                107,
                58,
                145,
                17,
                65,
                79,
                103,
                220,
                234,
                151,
                242,
                207,
                206,
                240,
                180,
                230,
                115,
                150,
                172,
                116,
                34,
                231,
                173,
                53,
                133,
                226,
                249,
                55,
                232,
                28,
                117,
                223,
                110,
                71,
                241,
                26,
                113,
                29,
                41,
                197,
                137,
                111,
                183,
                98,
                14,
                170,
                24,
                190,
                27,
                252,
                86,
                62,
                75,
                198,
                210,
                121,
                32,
                154,
                219,
                192,
                254,
                120,
                205,
                90,
                244,
                31,
                221,
                168,
                51,
                136,
                7,
                199,
                49,
                177,
                18,
                16,
                89,
                39,
                128,
                236,
                95,
                96,
                81,
                127,
                169,
                25,
                181,
                74,
                13,
                45,
                229,
                122,
                159,
                147,
                201,
                156,
                239,
                160,
                224,
                59,
                77,
                174,
                42,
                245,
                176,
                200,
                235,
                187,
                60,
                131,
                83,
                153,
                97,
                23,
                43,
                4,
                126,
                186,
                119,
                214,
                38,
                225,
                105,
                20,
                99,
                85,
                33,
                12,
                125
            ]
        ]
        return [arr1, arr2]

    def random_d(self, x):  # ok
        return math.floor(random.random() * x)

    def dz(self):  # ok
        return [self.random_d(4294967295), self.random_d(4294967295), self.random_d(4294967295),
                self.random_d(4294967295)]

    def arr_y_arr(self, arr1, arr2):  # ok
        return [arr1[0] ^ arr2[0], arr1[1] ^ arr2[1], arr1[2] ^ arr2[2], arr1[3] ^ arr2[3]]

    def arr_wei(self, arr1, arr2, num, arr3):  # ok
        j = arr1[num]
        ac = arr2[0] ^ j[0]
        e = arr2[3 if num else 1] ^ j[1]
        gs = arr2[2] ^ j[2]
        kb = arr2[1 if num else 3] ^ j[3]
        v = int(len(j) / 4 - 2)
        k = 4
        e8 = [0, 0, 0, 0]
        ar1 = arr3[0]
        ar2 = arr3[1]
        ar3 = arr3[2]
        ar4 = arr3[3]
        ar5 = arr3[4]
        for i in range(v):
            gk = ar1[self.unsinged_right_shift(ac, 24)] ^ ar2[(e >> 16) & 255] ^ ar3[(gs >> 8) & 255] ^ ar4[kb & 255] ^ \
                 j[k]
            af = ar1[self.unsinged_right_shift(e, 24)] ^ ar2[(gs >> 16) & 255] ^ ar3[(kb >> 8) & 255] ^ ar4[ac & 255] ^ \
                 j[k + 1]
            ag = ar1[self.unsinged_right_shift(gs, 24)] ^ ar2[(kb >> 16) & 255] ^ ar3[(ac >> 8) & 255] ^ ar4[e & 255] ^ \
                 j[k + 2]
            kb = ar1[self.unsinged_right_shift(kb, 24)] ^ ar2[(ac >> 16) & 255] ^ ar3[(e >> 8) & 255] ^ ar4[gs & 255] ^ \
                 j[k + 3]
            k += 4
            ac = gk
            e = af
            gs = ag
        for i in range(4):
            e8[3 & (-i) if num else i] = self.unsinged_left(ar5[self.unsinged_right_shift(ac, 24)], 24) ^ \
                                         self.unsinged_left(ar5[(e >> 16) & 255], 16) ^ \
                                         self.unsinged_left(ar5[(gs >> 8) & 255], 8) ^ \
                                         ar5[kb & 255] ^ j[k]
            k += 1
            gk = ac
            ac = e
            e = gs
            gs = kb
            kb = gk
        return e8

    def dm(self, arr):  # ok
        e = []
        for i in range(len(arr)):
            ac = arr[i]
            e.append(self.unsinged_right_shift(ac, 24) & 255)
            e.append(self.unsinged_right_shift(ac, 16) & 255)
            e.append(self.unsinged_right_shift(ac, 8) & 255)
            e.append(ac & 255)
        return e

    # ok
    def cd_arr(self, cd):
        g = len(cd) - 3
        h = []
        i = 0
        while i < g:
            f = ord(cd[i])
            j = ord(cd[i + 1])
            ac = ord(cd[i + 2])
            e = ord(cd[i + 3])
            i += 4
            h.append(self.six_arr[0][f] | self.six_arr[1][j])
            h.append(self.six_arr[2][j] | self.six_arr[3][ac])
            h.append(self.six_arr[4][ac] | self.six_arr[5][e])
        if i < len(cd):
            f = ord(cd[i])
            j = ord(cd[i + 1])
            i += 2
            h.append(self.six_arr[0][f] | self.six_arr[1][j])
            if i < len(cd):
                ac = ord(cd[i])
                h.append(self.six_arr[2][j] | self.six_arr[3][ac])
        return h

    def evstr_to_arr(self):
        i = 0
        num = 0
        while i < len(self.evstr):
            num += ord(self.evstr[i])
            i += 100
        arr = []
        for i in range(4):
            num = 15679 * (num & 65535) + 2531011
            arr.append(self.unsinged_right_shift(num, 24) & 255)
            arr.append(self.unsinged_right_shift(num, 16) & 255)
            arr.append(self.unsinged_right_shift(num, 8) & 255)
            arr.append(num & 255)
        return arr

    def arr3200(self):
        cd = self.cd_arr(self.cd)
        operate_arr = cd[2: cd[1] + 2]
        self.init_8ar_inst(operate_arr)
        arr32 = cd[cd[1] + 2:]
        ar8 = self.vmp_dict[22]()
        ar8[1] = arr32[1]
        j = 0
        for i in range(len(arr32)):
            if j == 8:
                j = 0
            arr32[i] ^= ar8[j]
            j += 1
        return arr32

    def arr37(self):
        arr32 = self.arr3200()
        arr = []
        sta = 1
        while True:
            if len(arr) == arr32[0]:
                break
            if arr32[sta] == 0:
                num = arr32[sta + 1]
                sta += 2
            else:
                num = arr32[sta]
                sta += 1
            if len(arr) == 6 or len(arr) == 7 or len(arr) == 27:
                num = self.unsinged_left(num, 8)
                num += arr32[sta]
                sta += 1
                arr2 = arr32[sta: sta + num]
                arr.append(arr2)
            else:
                arr2 = arr32[sta: sta + num]
                arr.append(arr2)
            sta += num
        self.vmp_dict[86] = int(self.arr_to_str(arr[21]))
        self.vmp_dict[87] = self.get_time()
        self.ar37 = arr

    def jk(self, arr):
        a = 63
        i = 0
        j = 0
        w = []
        while i < len(arr):
            f = arr[i]
            if f < 128:
                j = f
            elif f < 192:
                j = a
            elif f < 224:
                j = self.unsinged_left(f & 63, 6) | arr[i + 1] & 63
                i += 1
            elif f < 240:
                j = self.unsinged_left(f & 15, 12) | self.unsinged_left(arr[i + 1] & 63, 6) | arr[i + 2] & 63
                i += 2
            elif f < 248:
                j = self.unsinged_left(f & 7, 18) | self.unsinged_left(arr[i + 1] & 63, 12) | self.unsinged_left(
                    arr[i + 2] & 63, 6) | arr[i + 3] & 63
                i += 3
            elif f < 252:
                j = a
                i += 4
            elif f < 254:
                j = a
                i += 5
            else:
                j = a
            i += 1
        if j > 65535:
            j -= 65536
            w.append(j >> 10 + 55296)
            w.append((j % 1024) + 56320)
        else:
            w.append(j)
        return w

    def serial_add_arr(self, serial, arr):
        serial.append(len(arr))
        for i in range(len(arr)):
            if arr[i] > 255:
                arr[i] = 255
            serial.append(arr[i])
        return serial

    def P(self, arr):
        j = 0
        a = 0
        h = []
        for i in range(len(arr)):
            gs = self.ax[str(arr[i])]
            j = self.unsinged_left(j, gs["_$ku"]) | gs['_$cW']
            a += gs["_$ku"]
            while a >= 8:
                h.append(j >> (a - 8))
                j &= ~(self.unsinged_left(255, (a - 8)))
                a -= 8
        if a > 0:
            h.append(self.unsinged_left(j, 8 - a) | 184 >> a)
        return h

    # 这里 arr 不用传入进行 ^ 运算的 ok
    def get_func(self, arr):
        h = self.get_five_arr()
        arr1 = h[0]
        arr2 = h[1]
        ax = self.gen_tow_arr(arr, arr1, arr2)

        def func1(x, f):
            nonlocal ax, arr1
            gs = None
            hk = math.floor(len(x) / 16) + 1
            ac = []
            e = 16 - (len(x) % 16)
            if f:
                ac = gs = self.dz()
            gk = x[0:]
            for i in range(e):
                gk.append(e)
            gk = self.k_(gk)
            i = 0
            while i < hk:
                j = i << 2
                i += 1
                kb = gk[j: i << 2]
                if gs:
                    kb = self.arr_y_arr(kb, gs)
                gs = self.arr_wei(ax, kb, 0, arr1)
                for l in range(len(gs)):
                    ac.append(gs[l])
            return self.dm(ac)

        def func2(x, f):
            nonlocal ax, arr2
            gs = []
            x = self.k_(x)
            gk = None
            if f:
                gk = x[0:4]
                x = x[4:]
            hk = int(len(x) / 4)
            for i in range(hk):
                j = i << 2
                i += 1
                e = x[j: i << 2]
                ac = self.arr_wei(ax, e, 1, arr2)
                if gk:
                    ac = self.arr_y_arr(ac, gk)
                for l in range(len(ac)):
                    gs.append(ac[l])
                gk = e
            gs = self.dm(gs)
            kb = gs[-1]
            return gs[0: len(gs) - kb]

        return {'func1': func1, 'func2': func2}

    def gen_encry_param1(self, *args):  # ok
        j = len(args)
        h = args[2] if j > 2 else 1
        f = args[3] if j > 3 else 0
        ac = self.get_func(args[1])
        return ac['func1'](args[0], h)

    def gen_encry_param2(self, *args):
        j = len(args)
        h = args[2] if j > 2 else 1
        f = args[3] if j > 3 else 0
        ac = self.get_func(args[1])
        return ac['func2'](args[0], h)

    def gen_cookie(self, encry_param):  # ok
        if type(encry_param) == str:
            encry_param = self.str_to_arr(encry_param)
        encry_len = len(encry_param)
        encry_arr = [''] * math.ceil(encry_len * 4 / 3)
        encry_len = len(encry_param) - 2
        z = 0
        j = 0
        while z < encry_len:
            str1 = encry_param[z]
            z += 1
            encry_arr[j] = self.encry_letter[str1 >> 2]
            j += 1
            str2 = encry_param[z]
            z += 1
            encry_arr[j] = self.encry_letter[((str1 & 3) << 4) | (str2 >> 4)]
            j += 1
            str1 = encry_param[z]
            z += 1
            encry_arr[j] = self.encry_letter[((str2 & 15) << 2) | (str1 >> 6)]
            j += 1
            encry_arr[j] = self.encry_letter[str1 & 63]
            j += 1
        if z < len(encry_param):
            str1 = encry_param[z]
            encry_arr[j] = self.encry_letter[str1 >> 2]
            j += 1
            z += 1
            try:
                str2 = encry_param[z]
                encry_arr[j] = self.encry_letter[((str1 & 3) << 4) | (str2 >> 4)]
                j += 1
                encry_arr[j] = self.encry_letter[(str2 & 15) << 2]
            except:
                encry_arr[j] = self.encry_letter[((str1 & 3) << 4)]
        return ''.join(encry_arr)

    def get_96arr(self):
        logger.success('arr1')
        arr2 = [3, 1]
        arr2.extend(self.num_4arr(self.get_time() + self.vmp_dict[86] - self.vmp_dict[87]))
        arr2.extend(self.num_4arr(int(self.arr_to_str(self.ar37[19]))))
        a = self.unsinged_right_shift(((self.get_time() + 1) & 4294967295), 0)
        b = math.floor(random.random() * 1048575) * 4294967296
        arr2.extend(self.big_num_to_arr(a + b))
        arr2.append(int(self.arr_to_str(self.ar37[24])))
        logger.success('arr1ok')

        logger.success('arr2')
        arr = {
            42: "Win32", 43: 33, 44: 128, 45: 0, 46: 0, 47: 42, 48: 0, 51: 0, }
        num1, num2 = self.random98()
        arr[49] = num1
        arr[50] = num2
        arr[41] = self.To_num(self.headers['User-Agent'])
        arr1 = [4, 0, arr[43], arr[44]]
        arr1.extend(self.num_4arr(arr[41]))
        self.serial_add_arr(arr1, self.str_to_arr(arr[42]))
        arr1.extend(self.num_4arr(arr[51]))
        arr1.extend([arr[49], arr[50], arr[47], arr[48]])
        arr1.extend(self.num_4arr(16777216))

        logger.success('arr3')
        arr3 = [1, 0, 0, 0, 0, 0, 0, 1, 13, 16]
        index = int(self.arr_to_str(self.ar37[33]))
        num = int(self.arr_to_str(self.ar37[34])) * 698
        number1 = self.To_num(self.func_list[index])
        number2 = self.To_num(self.func_toStr[num: num + 698])
        number = (number1 ^ number2) & 65535
        arr3.extend(self.num_2arr(number))
        logger.success('arr3ok')

        logger.success('arr4')
        arr4 = [1, 0, 0, 0, 0, 0]
        arr = self.gen_encry_param2(self.cd_arr(self.localStorage['$_YWTU']), self.ar37[16])
        for i in range(len(arr)):
            if arr[i] > 255:
                arr[i] = 255
            arr4.append(arr[i])
        arr4.extend(self.num_2arr(int(self.arr_to_str(self.jk(self.cd_arr(self.localStorage['$_YVTX'])))) + 1))
        logger.success('arr4ok')

        logger.success('arr5')
        func = self.vmp_dict[54]({})
        arr5 = [func[self.arr_to_str(self.ar37[i])] for i in range(29, 33)]
        logger.success('arr5ok')

        arr = self.serial_add_arr([3], arr1)
        arr.extend(self.serial_add_arr([10], arr2))
        arr.extend(self.serial_add_arr([7], arr3))
        arr.extend(self.serial_add_arr([0], [0]))
        arr.extend(self.serial_add_arr([6], arr4))
        arr.extend(self.serial_add_arr([2], arr5))
        # arr.extend(self.serial_add_arr([9], [8, 0]))
        arr.extend(self.serial_add_arr([9], [12, 0, 0, 0, 0, 0]))
        arr.extend(self.serial_add_arr([13], [0]))

        arr = self.P(arr)
        for i in range(16):
            arr[i] ^= self.ar37[2][i]
        logger.success('gen_encry_param1')
        arr = self.gen_encry_param1(arr, self.ar37[17], 0)
        logger.success('gen_encry_param1 ok')

        return arr

    def houzui(self):
        arr = [1, 0]
        arr1 = self.num_4arr(self.vmp_dict[86])
        arr1.extend(self.num_4arr(self.vmp_dict[87]))
        arr1.append(0)
        arr.append(len(arr1))
        arr.extend(arr1)
        arr.append(len(self.ar37[2]))
        arr.extend(self.ar37[2])

        arr = self.gen_encry_param1(arr, self.ar37[17])

        return "0" + self.gen_cookie(arr)

    def run(self):
        arr = [2]
        arr1 = self.num_4arr(self.vmp_dict[86])
        arr1.extend(self.num_4arr(self.vmp_dict[87]))
        arr1.append(0)
        arr.append(len(arr1))
        arr.extend(arr1)
        arr.append(len(self.ar37[2]))
        arr.extend(self.ar37[2])

        arr1 = self.get_96arr()
        arr.append(len(arr1))
        arr.extend(arr1)
        num = self.To_num(arr)
        arr1 = self.num_4arr(num)
        arr1.extend(arr)

        logger.success('gen_encry_param1')
        arr = self.gen_encry_param1(arr1, self.ar37[16])
        logger.success('gen_encry_param1 ok')

        return "0" + self.gen_cookie(arr)


if __name__ == '__main__':
    rs = RsVmp()
    # a = rs.gen_encry_param1([187,64,221,243,9,217,87,21,240,18,233,194,232,117,125,222,157,172,32,61,246,27,92,109,172,98,117,215,185,193,105,186,138,169,149,248,117,207,119,248,163,250,228,211,89,91,220,109,182,218,210,46,82,139,119,61,95,37,78,243,124,151,159,145,112,247,16,93,213,155,86,234,177,156,177,198,167,1,73,221,161,146,68,214,61,237,137,172,107,95,88,55,105,144,85,65,103,120,4,216,183,86,75,181,12,1,79,1,106,102,126,181,11,199,83,72,170,228,243,222,224,51,45,205,203,9,219,208,62,199,26,159,202,37,24,122,250,174,94,215,54,226,216,48,227,250,222,193,226,51,12,57,114,79,112,208,103,183,19,117,139,184,219,108,33,15,227,55,239,119,238,54,147,185,187,165,213,245,251,150,23,75,110,206,218,210,227,92], [19,159,233,216,89,195,11,243,149,75,208,159,150,111,175,60])
    # a = rs.To_num([1,0,32,69,197,78,6,254,65,128,76,196,68,233,87,41,210,19,131,221,138,178,226,108,83,169,165,21,179,181,113,75,40,222,75,48,101,243,214,141,245,188,196,199,252,158,75,47,96,32,231,183,14,222,102,120,75,11,175,201,6,240,150,30,111,226,189,15,216,112,106,165,139,144,225,33,238,255,177,190,0,85,220,97])
    # print(a)
    # print(rs.num_4arr(a))

    # print(len(rs.gen_encry_param1([78,236,78,22,254,114,128,77,106,172,153,109,41,209,22,229,234,63,82,252,238,233,224,113,18,100,97,116,101,61,49,55,48,48,52,52,50,51,56,53,49,50,48],[39,249,100,5,198,53,156,195,3,159,3,0,5,5,6,7], 0)))
    # rs.cd = "qENqrrAlEGEqcs3EqGqFqfLkDpGFq13EqGq_rSLlDpGcqrLccs3YtGaExrLFrf9dqaEqDGAFrp93DPqRHaVFrS9drrLlkq9ltpL9DsZmqGqxJGLFqc3EqGqFxfLoDpGcqrLmDGERDqEqDPqFqp93rGVWcGAUDGARHaV_qS9drrLDDsZkDGVOHaEFqGaPbalTWAVlWOiMEd16lDKVWoqggWJxNr9bOcc1gwpavreD9HM67Jey6GKlqaA0rGAobPahcmyexO8Bw9RbUkpKp8TzpK2PMCYGguw.Y9A9H2uTwbeNtKfSFdQBMUrNFPfN4beBtKzuFDX6MURNFY7LxFNoJ0SLY2wLLbp_RCxOFD_jwuNPJKQbHQrzwb2NtbNneCZBF6rjFcBTwbeNtKfSFdQBMUrNF29.XsrLs9waVs4ihUpwwTQSHBxA10AeQlW2LYfzQD2jtDvXMCZNF6JLF4wzwb2NtbNneCZBF6rjFmj6EsRqHsY2JwSTMCp6Y2RYLCyL3lwdUVFyiYf.QDNLtdYCMC9NFom.enezQD2jtDvXMCZNF6JLFZ3BEsJKQTrEjsm7JYemsYsjwlSGRmJ0wzafiYy.QCf.zCTCFK9jFvh6Mne.QDNLtdYCMC9NFom.eTgBxuxJwoMBY6xQW2J5Qeeh3VLZQlzOZlEfHTyLQKB6hCTaFKLLF8yBMn2.QCf.zCTCFK9jFvh6MTgNxuyKIBeK1ur7MOxWa0pYIDm7MVupK0AvHTTjQBwBhCzaFbG.eURBF12LQKB6hCTaFKLLF8yBMTGNxkT9SmJURTmip6sT8sR0HK27w8TL3KAvHmeN4beBtKzuFDX6MURNF1NjQBwBhCzaFbG.eURBFYGjx9swMVNb3mSxAwyE8Op9Asr5TONUsUA9H2uTwbeNtKfSFdQBMUrNFPfN4beBtKzuFDX6MURNFY7LxwfvAOpV1KxmulRu3VGLUUoxR6zSVbQbHQrzwb2NtbNneCZBF6rjFcBTwbeNtKfSFdQBMUrNF29.XVrNAvE0wV.iJV3uWmSw38moKYRYtlV2LYfzQD2jtDvXMCZNF6JLF4wzwb2NtbNneCZBF6rjFmj6EV7ZRTroABrnJTle1l2he9NLAuASVKFyiYf.QDNLtdYCMC9NFom.enezQD2jtDvXMCZNF6JLFZ3BEVTbwCSH4UrYYKzHwDMuRDfDHKeEHBLfiYy.QCf.zCTCFK9jFvh6Mne.QDNLtdYCMC9NFom.eTgBx0a5JbvJpCNK3uJZMJrRYmxZFPNmjUEfHTyLQKB6hCTaFKLLF8yBMn2.QCf.zCTCFK9jFvh6MTgNx0ensHScWT0TYbrqZ694sbfvRT5.YbEvHTTjQBwBhCzaFbG.eURBF12LQKB6hCTaFKLLF8yBMTGNxmpz0KETA2pUQoo_J22LVbJZJdY.MCAvHmeN4beBtKzuFDX6MURNF1NjQBwBhCzaFbG.eURBFYGjx2MVRortFkRtt8l_1UeFQTRlzYa6JUA9H2uTwbeNtKfSFdQBMUrNFPfN4beBtKzuFDX6MURNFY7LxQ2TAVRJHOp.juzSMDpHVlB_R2JqMVQbHQrzwb2NtbNneCZBF6rjFcBTwbeNtKfSFdQBMUrNF29.XYrAsuSYRV6ShszCHly2stEaskJqJVV2LYfzQD2jtDvXMCZNF6JLF4wzwb2NtbNneCZBF6rjFmj6EYr.1bS23JJJVvY0Wmxc5VpuIkY2MbFyiYf.QDNLtdYCMC9NFom.enezQD2jtDvXMCZNF6JLFZ3BEYmwF2WSaUzPMb7LF64uJkxxK9JEUdLfiYy.QCf.zCTCFK9jFvh6Mne.QDNLtdYCMC9NFom.eTgBxCwkVKOyFvROQvqCMQyT3YpEVDw6uUEfHTyLQKB6hCTaFKLLF8yBMn2.QCf.zCTCFK9jFvh6MTgNxCW0siz2iC7eRKza.KrMpkp2p6dgsVEvHTTjQBwBhCzaFbG.eURBF12LQKB6hCTaFKLLF8yBMTGNxDmp6bf0WVNiU9MgpTSv1YRiAjzGWVAvHmeN4beBtKzuFDX6MURNF1NjQBwBhCzaFbG.eURBFYGjxboN1YxiQsYes5JM16A.Q9z5zsxUVVE9H2uTwbeNtKfSFdQBMUrNFPfN4beBtKzuFDX6MURNFY7LxIS4sOTKW2yN6TSLMURCwcv710ysW0lbHQrzwb2NtbNneCZBF6rjFcBTwbeNtKfSFdQBMUrNF29.XKNrpOWaR0.t1926FslZFF2BsvZ0pCV2LYfzQD2jtDvXMCZNF6JLF4wzwb2NtbNneCZBF6rjFmj6EKNIHkYtI_fJW1zhM6x7SlYzs9frMUFyiYf.QDNLtdYCMC9NFom.enezQD2jtDvXMCZNF6JLFZ3BEKZeIbmneoRbAOATWmoTYDfDUYmAtwLfiYy8U13L4DRftbpCwcO_QCLjQoYfwwfbMUmGwcz.ZbrbF6ROYUU3MDwGtbxfRi2_Q6mYR6RbevqftUm0QKhDhTGvtvmfRMpPQ6VjR6pXzoRa3owm3KvBRvljFKev3BYaRPNP36rhZbrbF6RO1D4LwnlNQUpS37R8hCzaFbG.eURBF12LQKB6hCTaFKLLF8yBMTGNxDeXZlYvwVROVC.wYVTN1D0awjJYRvAvHmeN4beBtKzuFDX6MURNF1NjQBwBhCzaFbG.eURBFYGjxbBl8Vf9JKTvwJxh8VSoJ0SCusJlQvA9H2uTwbeNtKfSFdQBMUrNFPfN4beBtKzuFDX6MURNFY7LxIpnF2wAU6xOdmxHwvrB3K.hAVRDMKQbHQrzwb2NtbNneCZBF6rjFcBTwbeNtKfSFdQBMUrNF29.XUpK3lzqRbCTRKxzWmwesdx0ssSipDV2LYfzQD2jtDvXMCZNF6JLF4wzwb2NtbNneCZBF6rjFmj6EU2QHkJMFiNDFspOH9zuTDmmtTRZR9FyiYf.QDNLtdYCMC9NFom.enezQD2jtDvXMCZNF6JLFZR5hCzaFbfF9AEJRb22Jvs1FKV5W2wDsZJE32Z530fKa6rqIkEe1OdnpCeasCGdI8xYQOJOJKVZTKYrp2RBFv1NsoNnHbr0w7NSRlEn1Ox6ekfGsvxnpTHw80wxV2Ed3BNE1KwxAuT2_bS2tuQdWDsgiuq.M6VdJjy1QbmwHTQaeVwDtuQdWDsgiuq.M6VdVHGuY9xkVKSzg0pWtuQdWDsgiuq.M6Vd1WzHJmRxRDW6j2N4tCeTH6d1JV2EJCwfwJrAwOgCR025nCmSRCxjQT_GWD2O3Uy1AJSYK0JjHKWSZ0yywvTXMmsw3106HkxvRtWahKeCHYTc4lSsMbSBWukdKn06HkxvRtWahKeCH1LTLOwGRO0Ttb6LqaWmrk3lrjLklDTSQvp0Ls7nWOEdWstLJu9SWsVlqF9_JCRbHGAl.sA6rAZ6Jk5LJkWCJOAZryZ6WuaurfAVri.MUW3JeyhA0ynsFj9grgBGzkhd7jSeDa13rG3kqADIqniNAiqbPArraYOtj9cmCP5rgJpyIUcET7L15UFln6g94GVHJk0u.kA0Wka0Jq8FWGWHJkl0J_Z4Wk0THaA7TlY63TaCYodcUlRYWspuUZSFQ2edUTS1nv2nQ0muQoF.1UJaHKTOU.YbsaVmrGVubaEurAASrO8781e9RDVLRBRShCpTM1fb_DgBRoJBtDU_FcevRoELRIxzhCwLwPf2gslBRP22RKK63DSLtKY0w4wGQo3NRUwSzCwPQ12PFDX6RCSbtKx.RiWBRCNStbrjdcebFD9j3KOBhCRe3cNPFdLBRK2btbx.41e2Fb7j3bOTwneOFvEL3HefhCxzF1fGZbVB3vZjMDB.hCzTw1N7QdGBFbRjtbTNd1ejFCajMKvLhCNTRcNzwHABFKp6tbyb4KEBM6YO3nBSQCANM6VLM8f7M12NMC3.eCS9tKGnR1BC3vWNFDeGtdRjMP2LMUE.ebSvtKfNQPBCQuqNFo3atdRu3P2LwbmGzCyu3P2.wo86Mvr7tK2bMMw73o0NFKJGzCSBRn2NFDt6MowOtK2nR.wu3v3Nwbwb_neu3KWjwDkCh6J7RPN0FdEBQC27wUq._CT9tUYCF1B.Q6qNwURat5zuw60NwvwOz6J_tUYdRnBjFbVNwoxZt5NGMoE6tvRbz6mPFc20RUK6QKRPtUpfwhwSMP26F6x2z6m63n20QD..h6rvF1N638WBQDLNwUxGz6r0Rc2TQCD6QoNCtUx2wMw63vZNQbJez6wj3n2nMKoeh6wjw6pfF8ZBw6mOtvrd4neTwbljQvsLh6YCQPNnIdZBwDputvJP5UWBQbfvtokCw1enFbrPt5S7RKW6tvJ6_ce03Dw.todyMPeeFUVLIdwa8n2eFCG.g6JXtUTTFcBO81edtUSzwy7kqamFEbxsbawQE1mErqHlxCN.rAxMEdJrqaACrGV0baEnrAA6"
    # rs.arr37()
    # evstr 修改
    rs.cd = "qEpqrrAltGEqcs3EqGqxJG9cqrLDDGQRDrLqxGVFqr9drpLDxGGcqrLloaVRDq3mkqGlmpLmDsZcqGVFqSLqDpGFrS9drrLlkq9rDaEqDGqFqp93qGqFrSLlorGcqrLcDGWRDrLqkqLloqQqDG3FrS93DGERHaWFqc3JqGqFrfLoDpGFrAaPvGlCWAVmWOi8ESK4a9qTCQfm0RYOYOqIoB9J_w6L1PZG7iqFgGomSSN8qqVmraAD7A7JUvg2JkH.pbJQJTYDQIrmMDx7RbJdjbzspcQeUCv.MCaNF6xLF4xzwK2NtCNnZbZ7F6r.FcBawbSNKc7bJzL61KfYYD755UNP3br.MsMjibQTRcV5UHrCMD9NFUm.ZPeXQD2.tDv.MCaNF6xLF4xzwK2NKPG2.Kfhp6J1HYtawmf6YkEeM7ThAsTuAc3eSKTTFK9.FvhnMnS.QDzLtdrCMD9NFUm.ZPeXQD2.K1XZJ9VeJb3CAifB3UwYYY3dZCf2p6S8p1K9KDyaFK7LF8zBMc2.Qbf.7bTTFK9.FvhnMnS.QDzLK.EfJ2RaV07T.DaaU0RiY6MNsDY9VowTAhayKCzaFCG.ZoR7F12NQKBnhCyaFK7LF8zBMc2.Qbf.anZPW9y6wUHtQ29nVoTaAeRfsuSu1Dr76nl_UbznFDXnMUYNF1zjQBxBhDzaFCG.ZoR7F12NQKBnUPavHYYe3ZzhJKSzWVeICYYy3KeXs06DpcEdUb2SFdEBMvrNFnfN_Ce7tKznFDXnMUYNF1zjQBxBU19vHbw3u2wPVVTlwCv9JvleFbeCQIYf31QdUDNnZbZ7F6r.FcBawbSNtK2SFdEBMvrNFnfN_Ce7Kc92p0oa1bJGU0NcAzY_WKpcW6TtNTwEwcQeUCv.MCaNF6xLF4xzwK2NtCNnZbZ7F6r.FcBawbSNKc7bpHNcWYpt3VRAC6J91cz8Q2U_86p1RcV5UHrCMD9NFUm.ZPeXQD2.tDv.MCaNF6xLF4xzwK2NKPG26K2oQOwC1YtLpO3aUTyPIwNRVTV.pP3eSKTTFK9.FvhnMnS.QDzLtdrCMD9NFUm.ZPeXQD2.K1XZ1u2vV0prMiZ6YkTh19fjTCfDJkx1R1K9KDyaFK7LF8zBMc2.Qbf.7bTTFK9.FvhnMnS.QDzLK.Ef1DR0M0SS4YYAF0S6RKdyFlWeMl7eR.ayKCzaFCG.ZoR7F12NQKBnhCyaFK7LF8zBMc2.Qbf.anZPsk0TF2oFF2JOWoeBsWpVY6SNtV3T4nl_UbznFDXnMUYNF1zjQBxBhDzaFCG.ZoR7F12NQKBnUPavsomH3JZuKkYY30JBykzhFDp9UkIh3PEdUb2SFdEBMvrNFnfN_Ce7tKznFDXnMUYNF1zjQBxBU19vYCyJduYoYmpuQbF.KKT13oZ0FIRB31QdUDNnZbZ7F6r.FcBawbSNtK2SFdEBMvrNFnfN_Ce7Kc92YVOyQleLJV9jIFwx82NaYVQNasQawcQeUCv.MCaNF6xLF4xzwK2NtCNnZbZ7F6r.FcBawbSNKc7bY8frA00eJCG6NvmNRlSs1DM4V0YzpcV5UHrCMD9NFUm.ZPeXQD2.tDv.MCaNF6xLF4xzwK2NKPG2uYrtHmRbsbCai6WZsKRHHjTWJ9qCpP3eSKTTFK9.FvhnMnS.QDzLtdrCMD9NFUm.ZPeXQD2.K1XZVDytMCROser1QoAuVVm2CUJyJKRzR1K9KDyaFK7LF8zBMc2.Qbf.7bTTFK9.FvhnMnS.QDzLK.EfYmTNVkxwybx.FnzLIK5NW9SFAlzQR.ayKCzaFCG.ZoR7F12NQKBnhCyaFK7LF8zBMc2.Qbf.anZPR0r1FCU6wbRnQuYXVXffVVfsRopp4nl_UbznFDXnMUYNF1zjQBxBhDzaFCG.ZoR7F12NQKBnUPav3kwHwdG4MOTbFoWSdYzrJDRlIDsAAPEdUb2SFdEBMvrNFnfN_Ce7tKznFDXnMUYNF1zjQBxBU19v32xceUA019TwpKsFUDxxYVTrJd0SA1QdUDNnZbZ7F6r.FcBawbSNtK2SFdEBMvrNFnfN_Ce7Kc923vUVV9zSJvyWIZRhQ1zS1o0N.TwVAPQeUCv.MCaNF6xLF4xzwK2NtCNnZbZ7F6r.FcBawbSNKc7b3iRiim3SUKNkaKfLwvY6tvkKs23uAPV5UHrCMD9NFUm.ZPeXQD2.tDv.MCaNF6xLF4xzwK2NKPG2e0mkWuJ91YMU1UxNWOejJIxi8OplRP3eSKTTFK9.FvhnMnS.QDzLtdrCMD9NFUm.ZPeXQD2.K1XZF2LZJ92ZJJqSh9z7QKe3CDTh1lxXw1K9KDyaFK7LF8zBMc2.Qbf.7bTTFK9.FvhnMnS.QDzLK.EfFOTe3vmL_CRoJk3uVbvxFlJwV2Wjp.ayKTy8x1za5ClBRoY6tCMXFPeawbxCpHzzwDr6tDfXdKRXwbrKw9sSRCVj3Kxvw8wuwmY9wKYj41l7QUwn3YjnKcEjQbxbtHeuQcN9wC0L_6r2w0RPFvH4Q1eNMDpfF8TbhCxGQ0fXdKRXwbrhMUsjE1SSw6xfK7WBMvrNFnfN_Ce7tKznFDXnMUYNF1zjQBxBU19vMDT7CDwapbrAFVoEsKSEMOJTHZfbQ1QdUDNnZbZ7F6r.FcBawbSNtK2SFdEBMvrNFnfN_Ce7Kc92FmO91DlTMbp6szRy1VQ0s6Yp.9p6wcQeUCv.MCaNF6xLF4xzwK2NtCNnZbZ7F6r.FcBawbSNKc7bFiejV2rQQKrGu0euQDSPFYIQp9JzRcV5UHrCMD9NFUm.ZPeXQD2.tDv.MCaNF6xLF4xzwK2NKPG2_YR210J2MPvg3bGaYoyWMX2JiVyoRP3eSKTTFK9.FvhnMnS.QDzLtdrCMD9NFUm.ZPeXQD2.K1XZ8Y9ZWmf.wzzNWKWe1orEdlVXYve2p1K9KDyaFK7LF8zBMc2.Qbf.7bTTFK9.FvhnMnS.QDzLKXWBMvrNFT9JvaTOFK3Tw040Rs7nYlYWUeYPKOyG1TYI4VryWOyxHD4FM6YHFuS5I7fnJbWCROex5lmkYbSNwuUp8vQ536wTYXS9puxxWUpLNKrhQvmlVlobp0S1VsSfRzYx392qHbRCZKVXJuauRC1bWcyBwOaTW7enRm0ZYkJNC93XJuauRC1bWcyBwOSsRtyKp0J1MCydCVaXJuauRC1bWcyBwOShYeE0V02v3kACS67XM63ZIl_L1V06RDx6sWTCiuR91vTUdomP3b2aUsnzFKRfIYmkAWfMpbL53kxB062uIKTBY0oZhsEZWKpvH_0zFv35U9ma0YJ.MDaaWCHDhsEZWKpvH_0zFv35ts35jbrOHs3NMv18qaqlJAQmJNgAFomSw6QeNOE6WOanWs1jisASJGQcJFQ63C3eraQSjsQqkuA6Hk1NWuW6Hkllq_LuisWmmS83wezRSG409VSivxRjjO7lm_39Whq4hrGMbR0krAqcqai8Eevo7s_hPaH_y3HQSJpwzRCKTZECoCY7ZS1i5D8jr64gqqZ6HOl5jslaJkaurqFBqaL0WOQ0Wja_JuQeraAovGWqrAA6rqFNqsqnInz2RB0B3Kf6tCY6e1efwbG.RUo6hCx9MPzbRXLB3bS.tCRj4PePIuQ.RnBe3bENRbfNtdTuQc2bwoQ.dUrCtKmbQcB_MCaN3KfvtdN7360N3Czu7bwz3P2PFKXnRbeStKxZ3.x2MDAN3Kf97bY7Qn2fFCbnRKe.Q1zPFiLBRCmvtCJBZ1evMDW.36CnFCSTtKe0w4x.wD3NMbwL7bNX3n2XFb_nFbyCtKy0R.xjQCLNMKYT7b2fQCA.MvI4RcSBwKqLM80BFvRjF1f.eCl7FKNGtDjj3PSLRoQLFBwvhDf7FPfjeUV7FDNOtD.Sw1SLwsALFXg6hDfTRPfj4bRvtKf63nBuQ6qNFopztdmfFP2jRoa.ZKpvtKN.RPBSMCVNFvJPtdmT312TRvQ.4brfw1263DDnQCwLtUwzRhxuMDaNwCfX4UQ7wKzGtoIXMPSTwUALw5y6hoYTQ6a.4vr9tUY5toIv3cS0MDlLwXN4hopbFoWT7vmftUwbF1B73vENwCxOt5SbQn26FPfTZ6YPtUwu3PB7wCTTtUpbF4xaRv0NwD7.4UYvtURaR1BzwD3Nwvy6t5NPQP2SRvg._bp_tUmX3PBjFbROtUJ.w8SbMvlNQ6rf7vwgQ12SwCinwUJCtUm6QhxT8DlNQDYS7vp2R6V.QC.dh6wLQnzuFHf2hoxj3KET7vpawP2a3KUuh6fvFczZF50B8D2CInfdZCZ7IUYjtodzMnSeInz5t5pjQqVmrar3XbAyrAm3EDMFqapFEK0eryNQxDmDra3CNGWcJOqorsF8qOl"
    rs.arr37()
    print(rs.ar37)
    print(rs.arr_to_str(rs.ar37[19]))


